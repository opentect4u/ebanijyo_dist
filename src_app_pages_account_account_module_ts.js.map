{"version":3,"file":"src_app_pages_account_account_module_ts.js","mappings":"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","sources":["./src/app/pages/account/account.component.ts","./src/app/pages/account/account.component.html","./src/app/pages/account/account.module.ts","./src/app/pages/account/addresses/addresses.component.ts","./src/app/pages/account/addresses/addresses.component.html","./src/app/pages/account/dashboard/dashboard.component.ts","./src/app/pages/account/dashboard/dashboard.component.html","./src/app/pages/account/information/information.component.ts","./src/app/pages/account/information/information.component.html","./src/app/pages/account/orders/orders.component.ts","./src/app/pages/account/orders/orders.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { DataService } from 'src/app/data.service';\r\nimport { LogoutDialogComponent } from '../sign-in/logout-dialog/logout-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AppService } from 'src/app/app.service';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  @ViewChild('sidenav', { static: true }) sidenav: any;\r\n  \r\n  public sidenavOpen:boolean = true;\r\n  public links = [\r\n    { name: 'Account Dashboard', href: 'dashboard', icon: 'dashboard' },\r\n    { name: 'Account Information', href: 'information', icon: 'info' },\r\n    { name: 'Addresses', href: 'addresses', icon: 'location_on' },\r\n    { name: 'Order History', href: 'orders', icon: 'add_shopping_cart' },  \r\n    { name: 'Logout', href: '/sign-in', icon: 'power_settings_new' },    \r\n  ];\r\n  constructor(public router:Router,private dataServe:DataService,private dialog:MatDialog,private appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n    };\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) { \r\n        if(window.innerWidth < 960){\r\n          this.sidenav.close(); \r\n        }\r\n      }                \r\n    });\r\n  }\r\n  public clear() {\r\n    this.appService.Data.cartList.forEach(product => {\r\n      this.appService.resetProductCartCount(product);\r\n    });\r\n    \r\n    var dt={\r\n      prod_dtls:this.appService.Data.cartList,\r\n      user_id:localStorage.getItem('userId'),\r\n     }\r\n     this.dataServe.delCart(dt).subscribe(data=>{console.log(data)\r\n      \r\n    })\r\n    this.appService.Data.cartList.length = 0;\r\n      this.appService.Data.totalPrice = 0;\r\n      this.appService.Data.totalCartCount = 0;\r\n\r\n  }\r\n  logout(link:any){\r\n     if(link.name=='Logout'){\r\n      const dialogRef=this.dialog.open(LogoutDialogComponent)\r\n      dialogRef.afterClosed().subscribe(status=>{\r\n        if(status)\r\n         {\r\n          this.dataServe.signOut()\r\n          this.dataServe.showLogOutButton.next(false)\r\n          this.clear()\r\n          this.router.navigate(['/'])\r\n         }\r\n        \r\n      })\r\n     }\r\n    \r\n  }\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav #sidenav [opened]=\"sidenavOpen\" [mode]=\"sidenavOpen ? 'side' : 'over'\" class=\"account-sidenav\" perfectScrollbar>\r\n        <mat-nav-list class=\"mat-elevation-z1 h-100\">\r\n            <mat-list-item *ngFor=\"let link of links\">              \r\n                <mat-icon matListIcon class=\"mat-icon-sm\">{{link.icon}}</mat-icon>\r\n                <a matLine [routerLink]=\"link.name!='Logout'?link.href:''\" (click)=\"logout(link)\" routerLinkActive=\"horizontal-active-link\" [routerLinkActiveOptions]=\"{exact:true}\">{{ link.name }}</a>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content class=\"account-content\" ngClass.gt-sm=\"p-left\">\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"header-row mat-elevation-z1 text-muted\">\r\n            <button *ngIf=\"!sidenavOpen\" mat-icon-button (click)=\"sidenav.toggle()\">\r\n                <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <h3>My Account</h3>\r\n        </div>\r\n        <div class=\"account-wrapper mat-elevation-z1\">\r\n            <router-outlet></router-outlet>\r\n        </div>  \r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AccountComponent } from './account.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { InformationComponent } from './information/information.component';\r\nimport { AddressesComponent } from './addresses/addresses.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\n\r\n\r\nexport const routes = [\r\n  { \r\n      path: '', \r\n      component: AccountComponent, children: [\r\n          { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n          { path: 'dashboard', component: DashboardComponent, data: {  breadcrumb: 'Dashboard' } },\r\n          { path: 'information', component: InformationComponent, data: {  breadcrumb: 'Information' } },\r\n          { path: 'addresses', component: AddressesComponent, data: {  breadcrumb: 'Addresses' } },\r\n          { path: 'orders', component: OrdersComponent, data: {  breadcrumb: 'Orders' } }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    AccountComponent,\r\n    DashboardComponent,\r\n    InformationComponent,\r\n    AddressesComponent,\r\n    OrdersComponent,\r\n    \r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppService } from '../../../app.service';\r\nimport { DataService } from 'src/app/data.service';\r\n\r\n@Component({\r\n  selector: 'app-addresses',\r\n  templateUrl: './addresses.component.html',\r\n  styleUrls: ['./addresses.component.scss']\r\n})\r\nexport class AddressesComponent implements OnInit {\r\n  billingForm: FormGroup;\r\n  shippingForm: FormGroup;\r\n  countries:any;\r\n  changeAddressData:any;\r\n  cid:any=localStorage.getItem('isLoggedIn') ? localStorage.getItem('userCountry') : ''\r\n  constructor(private dataServe:DataService, public appService:AppService, public formBuilder: FormBuilder, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.countries = this.dataServe.getCountries().subscribe(data => {\r\n      console.log(data)\r\n      this.countries = data;\r\n      this.countries = this.countries.msg\r\n      console.log(this.countries);\r\n      \r\n    });\r\n    // this.cid=localStorage.getItem('userCountry') ? localStorage.getItem('userCountry') : ''\r\n    console.log(this.cid)\r\n    this.billingForm = this.formBuilder.group({\r\n      'custName': ['', Validators.required],\r\n      'email': ['', Validators.required],\r\n      'phone': ['', Validators.required],\r\n      'country': [this.cid, Validators.required],\r\n      'city': ['', Validators.required],\r\n      'state': '',\r\n      'zip': ['', Validators.required],\r\n      'address': ['', Validators.required],\r\n      'id':[localStorage.getItem('userId')]\r\n    });\r\n    // this.shippingForm = this.formBuilder.group({\r\n    //   'firstName': ['', Validators.required],\r\n    //   'lastName': ['', Validators.required],\r\n    //   'middleName': '',\r\n    //   'company': '',\r\n    //   'email': ['', Validators.required],\r\n    //   'phone': ['', Validators.required],\r\n    //   'country': ['', Validators.required],\r\n    //   'city': ['', Validators.required],\r\n    //   'state': '',\r\n    //   'zip': ['', Validators.required],\r\n    //   'address': ['', Validators.required]\r\n    // });\r\n    // console.log(this.countries)\r\n    if(localStorage.getItem('isLoggedIn')=='true'){\r\n      this.billingForm.patchValue({\r\n        'custName': localStorage.getItem('userName'),\r\n        'email': localStorage.getItem('userEmail'),\r\n        'phone': localStorage.getItem('userPhone'),\r\n        'country':Number(localStorage.getItem('userCountry')),\r\n        'city': localStorage.getItem('userCity'),\r\n        'state': localStorage.getItem('userState'),\r\n        'zip': localStorage.getItem('userZip'),\r\n        'address': localStorage.getItem('userAddress'),\r\n      }) \r\n    }\r\n    this.billingForm.value.country = localStorage.getItem('userCountry');\r\n\r\n  }\r\n  ngAfterViewInit():void{\r\n  \r\n  }\r\n  getCode(e: any) {\r\n    console.log(e)\r\n    this.billingForm.value.country = e.value;\r\n    // this.cid = e.source.triggerValue\r\n\r\n  }\r\n  public onBillingFormSubmit(values:Object):void {\r\n    if (this.billingForm.valid) {\r\n      console.log(values)\r\n      this.dataServe.postBillingData(values).subscribe(data=>{\r\n        this.changeAddressData=data;\r\n        if(this.changeAddressData.suc==1)\r\n          this.snackBar.open('Your billing address information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  public onShippingFormSubmit(values:Object):void {\r\n    if (this.shippingForm.valid) {\r\n      this.snackBar.open('Your shipping address information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-tab-group >\r\n    <mat-tab label=\"Billing address\">\r\n        <div class=\"p-2 mt-1\">\r\n            <form [formGroup]=\"billingForm\" (ngSubmit)=\"onBillingFormSubmit(billingForm.value)\">     \r\n              <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input readonly matInput placeholder=\"Name\" formControlName=\"custName\" required>\r\n                      <mat-error *ngIf=\"billingForm.controls.custName.errors?.required\">name is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n               \r\n               <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input readonly matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                      <mat-error *ngIf=\"billingForm.controls.email.errors?.required\">Email is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Phone\" formControlName=\"phone\" required>\r\n                      <mat-error *ngIf=\"billingForm.controls.phone.errors?.required\">Phone is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                    <mat-select placeholder=\"Country\" formControlName=\"country\" required (selectionChange)=\"getCode($event)\">\r\n                      <mat-option *ngFor=\"let country of countries\" [value]=\"country.id\" >\r\n                          {{country.name}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"billingForm.controls.country.errors?.required\">Country is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"City\" formControlName=\"city\" required>\r\n                      <mat-error *ngIf=\"billingForm.controls.city.errors?.required\">City is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"State/Province\" formControlName=\"state\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Zip/Postal Code\" formControlName=\"zip\" required>\r\n                      <mat-error *ngIf=\"billingForm.controls.zip.errors?.required\">Zip/Postal Code is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Address (street, apartment, suite, unit etc.)\" formControlName=\"address\" required>\r\n                      <mat-error *ngIf=\"billingForm.controls.address.errors?.required\">Address is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"text-center mt-2\">\r\n                    <button mat-raised-button color=\"primary\" (click)=\"onBillingFormSubmit(billingForm.value)\">Save</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n        </div>\r\n    </mat-tab>\r\n    <!-- <mat-tab label=\"Shipping address\">\r\n        <div class=\"p-2 mt-1\">\r\n            <form [formGroup]=\"shippingForm\" (ngSubmit)=\"onShippingFormSubmit(shippingForm.value)\">     \r\n              <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"First name\" formControlName=\"firstName\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.firstName.errors?.required\">First name is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Last name\" formControlName=\"lastName\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.lastName.errors?.required\">Last name is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Middle Name/Initial\" formControlName=\"middleName\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.email.errors?.required\">Email is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Phone\" formControlName=\"phone\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.phone.errors?.required\">Phone is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                    <mat-select placeholder=\"Country\" formControlName=\"country\" required>\r\n                      <mat-option *ngFor=\"let country of countries\" [value]=\"country\">\r\n                          {{country.name}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"shippingForm.controls.country.errors?.required\">Country is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"City\" formControlName=\"city\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.city.errors?.required\">City is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"State/Province\" formControlName=\"state\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Zip/Postal Code\" formControlName=\"zip\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.zip.errors?.required\">Zip/Postal Code is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"px-1\">\r\n                  <mat-form-field class=\"w-100\">\r\n                      <input matInput placeholder=\"Address (street, apartment, suite, unit etc.)\" formControlName=\"address\" required>\r\n                      <mat-error *ngIf=\"shippingForm.controls.address.errors?.required\">Address is required</mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"text-center mt-2\">\r\n                    <button mat-raised-button color=\"primary\" (click)=\"onShippingFormSubmit(shippingForm.value)\">Save</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n        </div>\r\n    </mat-tab> -->\r\n</mat-tab-group>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  userName:any;\r\n  userEmail:any;\r\n  userAddress:any;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.userName=localStorage.getItem('userName')\r\n    this.userEmail=localStorage.getItem('userEmail')\r\n    this.userAddress=localStorage.getItem('userAddress')\r\n  }\r\n\r\n}\r\n","<p class=\"text-muted\">Hello, <b>{{userName}}!</b>\r\nFrom your My Account Dashboard you have the ability to view a snapshot of your recent account activity and update your account information. Select a link below to view or edit information.</p>\r\n\r\n<div fxLayout=\"row wrap\" class=\"flex-wrapper\">\r\n    <div fxFlex=\"33.3\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"col\">\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-header class=\"p-1 account-card-title\" fxLayoutAlign=\"space-between center\">\r\n              <mat-card-title class=\"m-0\"><h3>Account Information</h3></mat-card-title>\r\n              <a mat-icon-button routerLink=\"/account/information\"><mat-icon class=\"text-muted\">edit</mat-icon></a>\r\n          </mat-card-header>\r\n          <div class=\"divider\"></div>\r\n          <mat-card-content class=\"p-2 text-muted account-card-content\">\r\n              <p>{{userName}}</p>\r\n              <p>{{userEmail}}</p>\r\n              <p><a routerLink=\"/account/information\" class=\"primary-text\">Change password</a></p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"33.3\" fxFlex.sm=\"50\" fxFlex.xs=\"100\" class=\"col\">\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-header class=\"p-1 account-card-title\" fxLayoutAlign=\"space-between center\">\r\n              <mat-card-title class=\"m-0\"><h3>Addresses</h3></mat-card-title>\r\n              <a mat-icon-button routerLink=\"/account/addresses\"><mat-icon class=\"text-muted\">edit</mat-icon></a>\r\n          </mat-card-header>\r\n          <div class=\"divider\"></div>\r\n          <mat-card-content class=\"p-2 text-muted account-card-content\">\r\n            <p><b>Billing address</b></p>\r\n            <p>{{userAddress}}</p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n    <div fxFlex=\"33.3\" fxFlex.sm=\"100\" fxFlex.xs=\"100\" class=\"col\">\r\n        <mat-card class=\"p-0\">\r\n          <mat-card-header class=\"p-1 account-card-title\" fxLayoutAlign=\"space-between center\">\r\n              <mat-card-title class=\"m-0\"><h3>Orders</h3></mat-card-title>\r\n              <a mat-icon-button routerLink=\"/account/orders\"><mat-icon class=\"text-muted\">edit</mat-icon></a>\r\n          </mat-card-header>\r\n          <div class=\"divider\"></div>\r\n          <mat-card-content class=\"p-2 text-muted account-card-content\">\r\n            <p class=\"\">Completed</p>\r\n            <mat-progress-bar value=\"75\" color=\"primary\"></mat-progress-bar>\r\n            <p class=\"mt-1\">Processing</p>\r\n            <mat-progress-bar value=\"25\" color=\"accent\"></mat-progress-bar>\r\n            <p class=\"mt-1\">On hold</p>\r\n            <mat-progress-bar value=\"65\" color=\"warn\"></mat-progress-bar>\r\n            <p class=\"mt-1\">Refunded</p>\r\n            <mat-progress-bar value=\"25\" color=\"primary\"></mat-progress-bar>\r\n          </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DataService } from 'src/app/data.service';\r\nimport { emailValidator, matchingPasswords } from '../../../theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-information',\r\n  templateUrl: './information.component.html',\r\n  styleUrls: ['./information.component.scss']\r\n})\r\nexport class InformationComponent implements OnInit {\r\n  infoForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar,private dataServe: DataService) { }\r\n  userName:any;\r\n  userEmail:any;\r\n  changePassData:any;\r\n  changeNameData:any;\r\n  ngOnInit() {\r\n    this.userName=localStorage.getItem('userName');\r\n    this.userEmail=localStorage.getItem('userEmail')\r\n    this.infoForm = this.formBuilder.group({\r\n      'name': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      \r\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n      'id':[localStorage.getItem('userId')]\r\n    });\r\n\r\n    this.passwordForm = this.formBuilder.group({\r\n      'currentPassword': ['', Validators.required],\r\n      'newPassword': ['', Validators.required],\r\n      'confirmNewPassword': ['', Validators.required],\r\n      'email':[localStorage.getItem('userEmail')]\r\n    },{validator: matchingPasswords('newPassword', 'confirmNewPassword')});\r\n\r\n    this.infoForm.patchValue({\r\n      'name':this.userName,\r\n      'email':this.userEmail\r\n\r\n    })\r\n  }\r\n\r\n  public onInfoFormSubmit(values:Object):void {\r\n    if (this.infoForm.valid) {\r\n      this.dataServe.changeName(values).subscribe(data=>{\r\n        console.log(data);\r\n        this.changeNameData=data;\r\n        if(this.changeNameData.suc==1)\r\n        this.snackBar.open('Your account information updated successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n        localStorage.setItem('userName',this.infoForm.value.name)\r\n        this.dataServe.userName.next(this.infoForm.value.name)\r\n      })\r\n    }\r\n  }\r\n\r\n  public onPasswordFormSubmit(values:Object):void {\r\n    if (this.passwordForm.valid) {\r\n      this.dataServe.changePass(values).subscribe(data=>{\r\n        console.log(data);\r\n        this.changePassData=data;\r\n        if(this.changePassData.suc==1)\r\n          this.snackBar.open('Your password changed successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-2\">\r\n        <h2 class=\"text-muted text-center\">Account details</h2>\r\n        <form [formGroup]=\"infoForm\" (ngSubmit)=\"onInfoFormSubmit(infoForm.value)\">\r\n            <mat-form-field class=\"w-100 mt-2\">\r\n                <input matInput placeholder=\"Name\" formControlName=\"name\" required>\r\n                <mat-error *ngIf=\"infoForm.controls.name.errors?.required\"> Name is required</mat-error>\r\n                <mat-error *ngIf=\"infoForm.controls.name.hasError('minlength')\"> Name isn't long enough, minimum of 3 characters</mat-error>\r\n            </mat-form-field>\r\n       \r\n            <mat-form-field class=\"w-100 mt-1\">\r\n                <input readonly matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                <mat-error *ngIf=\"infoForm.controls.email.errors?.required\">Email is required</mat-error>\r\n                <mat-error *ngIf=\"infoForm.controls.email.hasError('invalidEmail')\">Invalid email address</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"text-center mt-2\">\r\n                <button mat-raised-button color=\"primary\" (click)=\"onInfoFormSubmit(infoForm.value)\">Save</button>\r\n            </div> \r\n        </form>\r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"p-2\" ngClass.sm=\"mt-2\" ngClass.xs=\"mt-2\">\r\n        <h2 class=\"text-muted text-center\">Password change</h2>\r\n        <form [formGroup]=\"passwordForm\" (ngSubmit)=\"onPasswordFormSubmit(passwordForm.value)\">            \r\n            <mat-form-field class=\"w-100 mt-2\">\r\n                <input matInput placeholder=\"Current Password\" formControlName=\"currentPassword\" type=\"password\"  required>\r\n                <mat-error *ngIf=\"passwordForm.controls.currentPassword.errors?.required\">Current Password is required</mat-error>\r\n                <mat-error *ngIf=\"passwordForm.controls.currentPassword.hasError('minlength')\">Current Password isn't long enough, minimum of 6 characters</mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"w-100 mt-1\">\r\n                <input matInput placeholder=\"New Password\" formControlName=\"newPassword\" type=\"password\"  required>\r\n                <mat-error *ngIf=\"passwordForm.controls.newPassword.errors?.required\">New Password is required</mat-error>\r\n                <mat-error *ngIf=\"passwordForm.controls.newPassword.hasError('minlength')\">New Password isn't long enough, minimum of 6 characters</mat-error>\r\n            </mat-form-field> \r\n            <mat-form-field class=\"w-100 mt-1\">\r\n              <input matInput placeholder=\"Confirm New Password\" formControlName=\"confirmNewPassword\" type=\"password\" required>\r\n              <mat-error *ngIf=\"passwordForm.controls.confirmNewPassword.errors?.required\">Confirm New Password is required</mat-error>\r\n              <mat-error *ngIf=\"passwordForm.controls.confirmNewPassword.hasError('mismatchedPasswords')\">Passwords do not match</mat-error>\r\n            </mat-form-field>\r\n            <div class=\"text-center mt-2\">\r\n                <button mat-raised-button color=\"primary\" (click)=\"onPasswordFormSubmit(passwordForm.value)\">Change</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div> \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/app/data.service';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n tnx_data:any\r\n  public orders = [\r\n    { number: '#3258', date: 'March 29, 2018', status: 'Completed', total: '$140.00 for 2 items', invoice: true },\r\n    { number: '#3145', date: 'February 14, 2018', status: 'On hold', total: '$255.99 for 1 item', invoice: false },\r\n    { number: '#2972', date: 'January 7, 2018', status: 'Processing', total: '$255.99 for 1 item', invoice: true },\r\n    { number: '#2971', date: 'January 5, 2018', status: 'Completed', total: '$73.00 for 1 item', invoice: true },\r\n    { number: '#1981', date: 'December 24, 2017', status: 'Pending Payment', total: '$285.00 for 2 items', invoice: false },\r\n    { number: '#1781', date: 'September 3, 2017', status: 'Refunded', total: '$49.00 for 2 items', invoice: false }\r\n  ]\r\n  constructor(private dataService:DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getOrderHistory(localStorage.getItem('userId')).subscribe(data=>{\r\n      console.log(data)\r\n      this.tnx_data=data;\r\n      this.tnx_data=this.tnx_data.msg\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"mat-table orders-table\">\r\n  <ng-container *ngFor=\"let order of tnx_data\">\r\n    <h3>{{order.tnx_date}}</h3>\r\n    <div class=\"mat-header-row\">\r\n      <div class=\"mat-header-cell\">Order</div>\r\n      <div class=\"mat-header-cell\">Date</div>\r\n      <div class=\"mat-header-cell\">Product</div>\r\n      <div class=\"mat-header-cell\">Status</div>\r\n      <div class=\"mat-header-cell\">Total</div>\r\n      <!-- <div class=\"mat-header-cell\"></div> -->\r\n    </div>\r\n    <div  class=\"mat-row\" *ngFor=\"let entry of order.data\">\r\n     \r\n     <!-- <ng-container *ngFor=\"let entry of order.data\"> -->\r\n      <div class=\"mat-cell\"><span class=\"order\">{{entry.trans_no}}</span></div>\r\n      <div class=\"mat-cell\">{{entry.trans_dt}}</div>\r\n      <div class=\"mat-cell\">{{entry.prod_name}}</div>\r\n      <div class=\"mat-cell\">{{entry.status}}</div>\r\n      <div class=\"mat-cell\">{{entry.price*entry.qty | currency:\"INR\":\"symbol\"}}</div> \r\n     <!-- </ng-container> -->\r\n          \r\n      <!-- <div class=\"mat-cell\">\r\n        <div class=\"p-1 actions\">          \r\n          <button mat-mini-fab color=\"primary\" matTooltip=\"View\">\r\n              <mat-icon>remove_red_eye</mat-icon>\r\n          </button>\r\n          <button *ngIf=\"order.invoice\" mat-mini-fab color=\"warn\" matTooltip=\"View invoice\" class=\"btn-invoice\">\r\n              <mat-icon>receipt</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>       -->\r\n    </div>\r\n  </ng-container>\r\n  </div>"],"names":[],"sourceRoot":"webpack:///"}