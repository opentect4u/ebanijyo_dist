{"version":3,"file":"src_app_admin_item-stock_item-stock_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAEoE;AACK;;;;;;;;;;;ICIrD,4EAAyD;IAAA,oFAAyB;IAAA,4DAAY;;;IAO9F,4EAA8D;IAAA,oFAAyB;IAAA,4DAAY;;;IAOnG,4EAAwD;IAAA,kFAAuB;IAAA,4DAAY;;ADTxG,MAAM,wBAAwB;IAEnC,YAAmB,SAAgD,EACxB,IAAQ,EAChC,EAAe,EACd,SAAsB;QAHvB,cAAS,GAAT,SAAS,CAAuC;QACxB,SAAI,GAAJ,IAAI,CAAI;QAChC,OAAE,GAAF,EAAE,CAAa;QACd,cAAS,GAAT,SAAS,CAAa;IAC1B,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtB,MAAM,EAAC,CAAC,EAAE,EAAC,+DAAmB,CAAC;YAC/B,WAAW,EAAC,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACpC,KAAK,EAAC,CAAC,EAAE,EAAC,+DAAmB,CAAC;SAC/B,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACnB,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;YACpC,WAAW,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;SAC1C,CAAC;IAEJ,CAAC;IACD,QAAQ;QACN,yBAAyB;QACzB,mCAAmC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,EAAE,GAAC;YACL,OAAO,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC1B,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;YAC7B,KAAK,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;YAC3B,IAAI,EAAC,GAAG;YACR,OAAO,EAAC,GAAG;YACX,IAAI,EAAC,iBAAiB;SACvB;QACD,mBAAmB;QACnB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IACvE,CAAC;;gGAnCU,wBAAwB,uMAGf,qEAAe;sHAHxB,wBAAwB;QCZrC,0EAAoE;QAA3C,oJAAY,cAAU,IAAC;QAC5C,yEAAwB;QACpB,yEAAyB;QACrB,yEAAkB;QACd,oFAAmD;QAC/C,4EAAW;QAAA,wEAAa;QAAA,4DAAY;QACpC,sEAAkG;QAClG,gIAA8F;QAClG,4DAAiB;QACrB,4DAAM;QACN,yEAAkB;QACd,qFAAmD;QAC/C,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,uEAA0E;QAC1E,kIAAmG;QACvG,4DAAiB;QACrB,4DAAM;QACN,0EAAkB;QACd,qFAAmD;QAC/C,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,uEAA2D;QAC3D,kIAA2F;QAC/F,4DAAiB;QACrB,4DAAM;QAcV,4DAAM;QACV,4DAAM;QACN,0EAAwB;QACpB,2EAAuE;QACnE,8EAAsE;QAAA,iEAAK;QAAA,4DAAS;QACpF,8EAAwD;QAAA,gEAAI;QAAA,4DAAS;QACzE,4DAAM;QACV,4DAAM;QACV,4DAAO;;QA7CD,+EAAkB;QAMG,0DAAqC;QAArC,kGAAqC;QAChC,0DAA2C;QAA3C,2JAA2C;QAO3C,0DAAgD;QAAhD,qKAAgD;QAOhD,0DAA0C;QAA1C,yJAA0C;;;;;;;;;;;;;;;;;;;;;;;;ACpB3B;AACwB;AACd;AACV;AACM;AACA;AACsC;;;AAC3F,MAAM,MAAM,GAAC;IACX,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,gFAAkB,EAAE,SAAS,EAAC,MAAM,EAAC;CACzD;AAeM,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHARjB;YACP,yDAAY;YACZ,+DAAY;YACZ,kEAAqB,CAAC,MAAM,CAAC;YAC7B,+DAAmB;YACnB,+DAAmB;SACpB;mIAEU,eAAe,mBAXxB,gFAAkB;QAClB,oGAAwB,aAGxB,yDAAY;QACZ,+DAAY,6DAEZ,+DAAmB;QACnB,+DAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBqE;;;;;;;;;;;;;;ICQpF,yEAAyH;IACzH,yEAAsB;IAAA,uDAAO;IAAA,4DAAM;IACnC,yEAAsB;IAAA,uDAAmB;IAAA,4DAAM;IAC/C,yEAAsB;IAAA,uDAAuB;IAAA,4DAAM;IACnD,yEAAsB;IAAA,uDAAuB;IAAA,4DAAM;IACnD,yEAAsB;IAClB,0EAAyB;IACrB,6EAA6E;IAAtB,8VAAS,qBAAW,IAAC;IACxE,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC7B,4DAAS;IAIb,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAdoB,0DAAO;IAAP,yEAAO;IACP,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAuB;IAAvB,uFAAuB;;;;IAYjD,yEAAsD;IAClD,0EAAkB;IACd,+EAAkC;IAC9B,0FAAiH;IAArC,8TAAc,4BAAqB,IAAC;IAAC,4DAAsB;IAC3I,4DAAW;IACf,4DAAM;IACV,4DAAM;;;ADtBH,MAAM,kBAAkB;IAG7B,YAAoB,SAAqB,EAAQ,MAAiB,EAAQ,WAAuB;QAA7E,cAAS,GAAT,SAAS,CAAY;QAAQ,WAAM,GAAN,MAAM,CAAW;QAAQ,gBAAW,GAAX,WAAW,CAAY;QAM1F,UAAK,GAAG,CAAC,CAAC;QALf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAE3C,CAAC;IAKF,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE;IACjB,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,IAAI,GAAE;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG;QACnC,CAAC,CAAC;IACJ,CAAC;IACM,aAAa,CAAC,KAAK;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IACD,IAAI,CAAC,KAAK;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAwB,EAAC;YAC1D,IAAI,EAAE;gBACJ,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,IAAI,CAAC,SAAS;aACvB;YACD,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK;SAC/C,CAAC;QACF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAC/C,IAAG,YAAY,EAAC;gBACf,IAAI,CAAC,QAAQ,EAAE;aAEf;QACH,CAAC,CAAC;IACJ,CAAC;;oFAzCU,kBAAkB;gHAAlB,kBAAkB;QCX/B,yEAAmC;QAC/B,yEAA4B;QACxB,yEAA6B;QAAA,6DAAE;QAAA,4DAAM;QACrC,yEAA6B;QAAA,kEAAO;QAAA,4DAAM;QAC1C,yEAA6B;QAAA,wEAAa;QAAA,4DAAM;QAChD,yEAA6B;QAAA,yEAAc;QAAA,4DAAM;QAEjD,qEAAmC;QAEvC,4DAAM;QAEF,iHAeE;;QACN,gHAMM;QACV,4DAAM;;QAvByB,2DAAqE;QAArE,gPAAqE;QAgB1F,0DAA0B;QAA1B,0FAA0B","sources":["./src/app/admin/item-stock/item-stock-dialog/item-stock-dialog.component.ts","./src/app/admin/item-stock/item-stock-dialog/item-stock-dialog.component.html","./src/app/admin/item-stock/item-stock.module.ts","./src/app/admin/item-stock/item-stock/item-stock.component.ts","./src/app/admin/item-stock/item-stock/item-stock.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { inject } from '@angular/core/testing';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Data } from 'src/app/app.service';\nimport { DataService } from 'src/app/data.service';\n\n@Component({\n  selector: 'app-item-stock-dialog',\n  templateUrl: './item-stock-dialog.component.html',\n  styleUrls: ['./item-stock-dialog.component.scss']\n})\nexport class ItemStockDialogComponent implements OnInit {\n  form:FormGroup\n  constructor(public dialogref:MatDialogRef<ItemStockDialogComponent>,\n              @Inject(MAT_DIALOG_DATA)public data:any,\n              public fb: FormBuilder,\n              private dataServe: DataService\n              ) { }\n\n  ngOnInit(): void {\n    this.form=this.fb.group({\n      ostock:['',Validators.required],\n      stockinHand:['',Validators.required],\n      entry:['',Validators.required]\n    })\n   \n    this.form.patchValue({\n      ostock:this.data.stock.opening_stock,\n      stockinHand:this.data.stock.stock_in_hand\n    })\n  \n  }\n  onSubmit(){\n    // console.log(this.form)\n    // console.log(this.data.stock.id);\n    this.dialogref.close(this.form.value)\n    var dt={\n      prod_id:this.data.stock.id,\n      ostock:this.form.value.ostock,\n      entry:this.form.value.entry,\n      flag:'1',\n      user_id:'1',\n      user:'admin@gmail.com'\n    }\n    // console.log(dt);\n    this.dataServe.editItemStock(dt).subscribe(data=>{console.log(data)})\n  }\n\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <div mat-dialog-content>\n        <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Opening stock</mat-label>\n                    <input [readonly]=\"data.stock.opening_stock\" matInput formControlName=\"ostock\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.ostock.errors?.required\">Opening stock is required</mat-error> \n                </mat-form-field>\n            </div> \n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Stock in hand</mat-label>\n                    <input readonly matInput formControlName=\"stockinHand\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.stockinHand.errors?.required\">Stock in hand is required</mat-error> \n                </mat-form-field>\n            </div> \n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Stock entry</mat-label>\n                    <input matInput formControlName=\"entry\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.entry.errors?.required\">Stock entry is required</mat-error> \n                </mat-form-field>\n            </div> \n            <!-- <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Parent category</mat-label>\n                    <mat-select formControlName=\"parentId\">\n                        <mat-option *ngFor=\"let cat of data.categories\" [value]=\"cat.id\">\n                            <span>{{cat.name}}</span>\n                        </mat-option>\n                    </mat-select> \n                </mat-form-field>\n            </div>  -->\n            <!-- <div fxFlex=\"100\" class=\"py-1\">    \n                <mat-checkbox formControlName=\"hasSubCategory\" color=\"primary\">Has SubCategory</mat-checkbox>\n            </div>  -->\n        </div>\n    </div>\n    <div mat-dialog-actions>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n        </div> \n    </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ItemStockComponent } from './item-stock/item-stock.component';\nimport { SharedModule } from '../../shared/shared.module'\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ItemStockDialogComponent } from './item-stock-dialog/item-stock-dialog.component';\nconst routes=[\n  {path:'',component:ItemStockComponent, pathMatch:'full'}\n]\n\n@NgModule({\n  declarations: [\n    ItemStockComponent,\n    ItemStockDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    NgxPaginationModule\n  ]\n})\nexport class ItemStockModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ItemStockDialogComponent } from '../item-stock-dialog/item-stock-dialog.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AppSettings, Settings } from 'src/app/app.settings';\n@Component({\n  selector: 'app-item-stock',\n  templateUrl: './item-stock.component.html',\n  styleUrls: ['./item-stock.component.scss']\n})\nexport class ItemStockComponent implements OnInit {\n  settings: Settings;\n\n  constructor(private dataServe:DataService,public dialog: MatDialog,public appSettings:AppSettings) {\n    this.settings = this.appSettings.settings;\n\n   }\n  stockData:any;\n  public page: any;\n  public count = 6;\n  public limit:any;\n  ngOnInit(): void {\n    this.getStock()\n  }\n  getStock(){\n    this.dataServe.getItemStock().subscribe(data=>{\n      console.log(data);\n      this.stockData=data;\n      this.stockData=this.stockData.msg\n    })\n  }\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n  edit(stock){\n    const dialogRef = this.dialog.open(ItemStockDialogComponent,{\n      data: {\n        stock: stock,\n        stocks: this.stockData\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: true,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr'\n    })\n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n       this.getStock()\n       \n      } \n    })\n  }\n}\n","<div class=\"mat-table admin-table\">\n    <div class=\"mat-header-row\">\n        <div class=\"mat-header-cell\">ID</div>\n        <div class=\"mat-header-cell\">Product</div>\n        <div class=\"mat-header-cell\">Opening Stock</div> \n        <div class=\"mat-header-cell\">Stock in hande</div> \n        <!-- <div class=\"mat-header-cell\"></div> -->\n        <div class=\"mat-header-cell\"></div>\n        <!-- <div class=\"mat-header-cell\"></div> -->\n    </div>\n    <!-- <div *ngFor=\"let cat of categories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\"> -->\n        <div *ngFor=\"let stock of stockData | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\">\n        <div class=\"mat-cell\">{{i+1}}</div>\n        <div class=\"mat-cell\">{{stock.prod_name}}</div>\n        <div class=\"mat-cell\">{{stock.opening_stock}}</div>\n        <div class=\"mat-cell\">{{stock.stock_in_hand}}</div>\n        <div class=\"mat-cell\">\n            <div class=\"p-1 actions\">          \n                <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"edit(stock)\">\n                    <mat-icon>edit</mat-icon>\n                </button>\n                <!-- <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(banner)\">\n                    <mat-icon>delete</mat-icon>\n                </button> -->\n            </div>\n        </div>        \n    </div>\n    <div *ngIf=\"stockData.length > 0\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100\"> \n            <mat-card class=\"p-0 text-center\">           \n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n            </mat-card>\n        </div>\n    </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}