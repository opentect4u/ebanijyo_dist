{"version":3,"file":"src_app_pages_brands_brands_module_ts.js","mappings":"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","sources":["./src/app/pages/brands/brand/brand.component.ts","./src/app/pages/brands/brand/brand.component.html","./src/app/pages/brands/brands.component.ts","./src/app/pages/brands/brands.component.html","./src/app/pages/brands/brands.module.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, HostListener, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ProductDialogComponent } from '../../../shared/products-carousel/product-dialog/product-dialog.component';\r\nimport { AppService } from '../../../app.service';\r\nimport { Product, Category } from \"../../../app.models\";\r\nimport { Settings, AppSettings } from 'src/app/app.settings';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-brand',\r\n  templateUrl: './brand.component.html',\r\n  styleUrls: ['./brand.component.scss']\r\n})\r\nexport class BrandComponent implements OnInit {\r\n  @ViewChild('sidenav', { static: true }) sidenav: any;\r\n  public sidenavOpen:boolean = true;\r\n  private sub: any;\r\n  public viewType: string = 'grid';\r\n  public viewCol: number = 25;\r\n  public counts = [12, 24, 36];\r\n  public count:any;\r\n  public sortings = ['Sort by Default', 'Best match', 'Lowest first', 'Highest first'];\r\n  public sort:any;\r\n  public products: Array<Product> = [];\r\n  public categories:Category[];\r\n  public brands = [];\r\n  public priceFrom: number = 750;\r\n  public priceTo: number = 1599;\r\n  public colors = [\"#5C6BC0\",\"#66BB6A\",\"#EF5350\",\"#BA68C8\",\"#FF4081\",\"#9575CD\",\"#90CAF9\",\"#B2DFDB\",\"#DCE775\",\"#FFD740\",\"#00E676\",\"#FBC02D\",\"#FF7043\",\"#F5F5F5\",\"#000000\"];\r\n  public sizes = [\"S\",\"M\",\"L\",\"XL\",\"2XL\",\"32\",\"36\",\"38\",\"46\",\"52\",\"13.3\\\"\",\"15.4\\\"\",\"17\\\"\",\"21\\\"\",\"23.4\\\"\"];\r\n  public page:any;\r\n  public settings: Settings;\r\n  constructor(public appSettings:AppSettings, \r\n              private activatedRoute: ActivatedRoute, \r\n              public appService:AppService, \r\n              public dialog: MatDialog, \r\n              private router: Router,\r\n              @Inject(PLATFORM_ID) private platformId: Object) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.count = this.counts[0];\r\n    this.sort = this.sortings[0];\r\n    this.sub = this.activatedRoute.params.subscribe(params => {\r\n     // console.log(params['name']);\r\n    });\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n    };\r\n    if(window.innerWidth < 1280){\r\n      this.viewCol = 33.3;\r\n    };\r\n\r\n    this.getCategories();\r\n    this.getAllProducts();  \r\n  }\r\n\r\n  public getAllProducts(){\r\n    this.appService.getProducts(\"brand\").subscribe(data=>{\r\n      this.products = data; \r\n      //for show more product  \r\n      for (var index = 0; index < 3; index++) {\r\n        this.products = this.products.concat(this.products);        \r\n      }\r\n    });\r\n  }\r\n\r\n  public getCategories(){  \r\n    if(this.appService.Data.categories.length == 0) { \r\n      this.appService.getCategories().subscribe(data => {\r\n        this.categories = data;\r\n        this.appService.Data.categories = data;\r\n      });\r\n    }\r\n    else{\r\n      this.categories = this.appService.Data.categories;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n    (window.innerWidth < 1280) ? this.viewCol = 33.3 : this.viewCol = 25;\r\n  }\r\n\r\n  public changeCount(count){\r\n    this.count = count;\r\n    this.getAllProducts(); \r\n  }\r\n\r\n  public changeSorting(sort){\r\n    this.sort = sort;\r\n  }\r\n\r\n  public changeViewType(viewType, viewCol){\r\n    this.viewType = viewType;\r\n    this.viewCol = viewCol;\r\n  }\r\n\r\n  public openProductDialog(product){   \r\n    let dialogRef = this.dialog.open(ProductDialogComponent, {\r\n        data: product,\r\n        panelClass: 'product-dialog',\r\n        direction: (this.settings.rtl) ? 'rtl' : 'ltr'\r\n    });\r\n    dialogRef.afterClosed().subscribe(product => {\r\n      if(product){\r\n        this.router.navigate(['/products', product.id, product.name]); \r\n      }\r\n    });\r\n  }\r\n\r\n  public onPageChanged(event){\r\n    this.page = event;\r\n    this.getAllProducts(); \r\n    if (isPlatformBrowser(this.platformId)) {\r\n      window.scrollTo(0,0);\r\n    }  \r\n  }\r\n\r\n  public onChangeCategory(event){\r\n    if(event.target){\r\n      this.router.navigate(['/products', event.target.innerText.toLowerCase()]); \r\n    }   \r\n  }\r\n\r\n}","<mat-sidenav-container>\r\n    <mat-sidenav #sidenav [opened]=\"sidenavOpen\" [mode]=\"sidenavOpen ? 'side' : 'over'\" class=\"filter-sidenav\" perfectScrollbar>\r\n        \r\n        <mat-accordion displayMode=\"flat\" multi=\"true\">\r\n            <mat-expansion-panel expanded>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Categories</h4>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div class=\"categories-wrapper categories-dropdown\" perfectScrollbar>\r\n                    <app-category-list [categories]=\"categories\" [categoryParentId]=\"0\" (change)=\"onChangeCategory($event)\"></app-category-list>\r\n                </div>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel expanded>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Price</h4>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"text-muted\">\r\n                    <span>From: <b>${{priceFrom}}</b></span>\r\n                    <span>To: <b>${{priceTo}}</b></span>\r\n                </div>\r\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"filter-price\">\r\n                    <mat-slider color=\"primary\" max=\"2000\" min=\"1\" thumb-label=\"true\" [(ngModel)]=\"priceFrom\"></mat-slider>\r\n                    <mat-slider color=\"warn\" max=\"2000\" min=\"1\" thumb-label=\"true\" [(ngModel)]=\"priceTo\"></mat-slider>\r\n                </div>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel expanded>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Color</h4>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"filter-buttons\">\r\n                    <button mat-raised-button *ngFor=\"let color of colors\" [style.background]=\"color\">&nbsp;</button>\r\n                </div>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel expanded>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Size</h4>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"filter-buttons\">\r\n                    <button mat-raised-button *ngFor=\"let size of sizes\">{{size}}</button>\r\n                </div>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel expanded>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Condition</h4>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div fxLayout=\"column\">\r\n                    <mat-checkbox color=\"primary\">New</mat-checkbox>\r\n                    <mat-checkbox color=\"primary\">Used</mat-checkbox>\r\n                    <mat-checkbox color=\"primary\">Not Specified</mat-checkbox>\r\n                </div>\r\n            </mat-expansion-panel>\r\n\r\n            <mat-expansion-panel expanded>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <h4>Now starting at $1379</h4>\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\r\n                   <a [routerLink]=\"['/products/electronics']\"><img src=\"assets/images/products/probook/2-medium.png\" alt=\"\" class=\"mw-100\"></a>\r\n                </div>\r\n            </mat-expansion-panel>\r\n\r\n        </mat-accordion>\r\n\r\n    </mat-sidenav>\r\n    <mat-sidenav-content class=\"all-products\" ngClass.gt-sm=\"p-left\">\r\n        <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between center\" class=\"filter-row mat-elevation-z1 text-muted\">\r\n            <button *ngIf=\"!sidenavOpen\" mat-icon-button (click)=\"sidenav.toggle()\">\r\n                <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <div>\r\n                <a mat-button [matMenuTriggerFor]=\"sortMenu\" #sortMenuTrigger=\"matMenuTrigger\">\r\n                    {{sort}}<mat-icon class=\"mat-icon-sm caret\">arrow_drop_down</mat-icon>\r\n                </a>\r\n                <mat-menu #sortMenu=\"matMenu\" xPosition=\"before\" class=\"app-dropdown\" overlapTrigger=\"true\">\r\n                    <span (mouseleave)=\"sortMenuTrigger.closeMenu()\">\r\n                        <button mat-menu-item *ngFor=\"let sort of sortings\" (click)=\"changeSorting(sort)\">\r\n                            <span>{{sort}}</span>\r\n                        </button>\r\n                    </span>\r\n                </mat-menu>\r\n            </div>\r\n            <div>\r\n                <a mat-button [matMenuTriggerFor]=\"countsMenu\" #countsMenuTrigger=\"matMenuTrigger\">\r\n                    Show {{count}}<mat-icon class=\"mat-icon-sm caret\">arrow_drop_down</mat-icon>\r\n                </a>\r\n                <mat-menu #countsMenu=\"matMenu\" xPosition=\"before\" class=\"app-dropdown\" overlapTrigger=\"true\">\r\n                    <span (mouseleave)=\"countsMenuTrigger.closeMenu()\">\r\n                        <button mat-menu-item *ngFor=\"let count of counts\" (click)=\"changeCount(count)\">\r\n                            <span>{{count}}</span>\r\n                        </button>\r\n                    </span>\r\n                </mat-menu>\r\n                <button mat-icon-button (click)=\"changeViewType('list', 100)\">\r\n                    <mat-icon>view_list</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"changeViewType('grid', 33.3)\">\r\n                    <mat-icon>view_module</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"changeViewType('grid', 25)\">\r\n                    <mat-icon>view_comfy</mat-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"viewType == 'grid'\" fxLayout=\"row wrap\" class=\"products-wrapper\">\r\n            <div *ngFor=\"let product of products | paginate: { itemsPerPage: count, currentPage: page }\" fxFlex=\"100\" [fxFlex.gt-sm]=\"viewCol\" fxFlex.sm=\"50\" class=\"col\">\r\n                <mat-card class=\"product-item text-center\">\r\n                    <mat-chip-list *ngIf=\"product.discount\">\r\n                        <mat-chip color=\"warn\" selected=\"true\">{{product.discount}}% OFF</mat-chip>\r\n                    </mat-chip-list>\r\n                    <a [routerLink]=\"['/products', product.id, product.name]\" class=\"image-link\">\r\n                        <img [src]=\"product.images[0].medium\" alt=\"\">\r\n                    </a>\r\n                    <h4 class=\"category text-muted\">{{ ( appService.Data.categories | filterById : product.categoryId )?.name }}</h4>                                                                     \r\n                    <a [routerLink]=\"['/products', product.id, product.name]\" class=\"title text-truncate\">\r\n                        {{product.name}}\r\n                    </a>\r\n                    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"prices\">\r\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                            <p class=\"old-price text-muted\"><span *ngIf=\"product.oldPrice\">${{product.oldPrice | number : '1.2-2'}}</span></p>\r\n                            <p class=\"new-price\">${{product.newPrice | number : '1.2-2'}}</p>\r\n                        </div>\r\n                        <app-rating [ratingsCount]=\"product.ratingsCount\" [ratingsValue]=\"product.ratingsValue\" [direction]=\"'column'\"></app-rating>\r\n                    </div>                            \r\n                    <div class=\"divider\"></div>\r\n                    <div class=\"icons\">\r\n                        <app-controls [product]=\"product\" (onOpenProductDialog)=\"openProductDialog(product)\"></app-controls>\r\n                    </div>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"viewType == 'list'\" fxLayout=\"row wrap\" class=\"products-wrapper\">\r\n            <div  *ngFor=\"let product of products | paginate: { itemsPerPage: count, currentPage: page }\" fxFlex=\"100\" class=\"col\">\r\n                <mat-card class=\"product-item\">\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"40\" class=\"p-2\">\r\n                            <mat-chip-list *ngIf=\"product.discount\" class=\"list-view\">\r\n                                <mat-chip color=\"warn\" selected=\"true\">{{product.discount}}% OFF</mat-chip>\r\n                            </mat-chip-list>\r\n                            <a [routerLink]=\"['/products', product.id, product.name]\" class=\"image-link\">\r\n                                <img [src]=\"product.images[0].medium\" alt=\"\">\r\n                            </a>\r\n                        </div>\r\n                        <div fxFlex=\"100\" fxFlex.gt-xs=\"60\" class=\"p-2\">\r\n                            <h4 class=\"category text-muted\">{{ ( appService.Data.categories | filterById : product.categoryId )?.name }}</h4>                                                                     \r\n                            <a [routerLink]=\"['/products', product.id, product.name]\" class=\"title\">\r\n                                {{product.name}}\r\n                            </a>\r\n                            <p class=\"py-1 text-muted lh\">{{product.description}}</p>\r\n                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"prices\">\r\n                                <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                                    <p class=\"old-price text-muted\"><span *ngIf=\"product.oldPrice\">${{product.oldPrice | number : '1.2-2'}}</span></p>\r\n                                    <p class=\"new-price\">${{product.newPrice | number : '1.2-2'}}</p>\r\n                                </div>\r\n                                <app-rating [ratingsCount]=\"product.ratingsCount\" [ratingsValue]=\"product.ratingsValue\" [direction]=\"'column'\"></app-rating>\r\n                            </div>                            \r\n                            <div class=\"divider\"></div>\r\n                            <div class=\"icons\">\r\n                                <app-controls [product]=\"product\" (onOpenProductDialog)=\"openProductDialog(product)\"></app-controls>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"products.length > 0\" fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\"> \r\n                <mat-card class=\"p-0 text-center\">           \r\n                    <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n        \r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\r\nimport { AppService } from '../../app.service';\r\n\r\n@Component({\r\n  selector: 'app-brands',\r\n  templateUrl: './brands.component.html',\r\n  styleUrls: ['./brands.component.scss']\r\n})\r\nexport class BrandsComponent implements OnInit {\r\n  \r\n  public letters = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"V\",\"W\",\"Y\",\"Z\"];\r\n  public brands = [];\r\n  public searchText: string;\r\n\r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.brands = this.appService.getBrands();\r\n    // this.brands.sort((a, b)=>{\r\n    //   if(a.name < b.name) return -1;\r\n    //   if(a.name > b.name) return 1;\r\n    //   return 0;\r\n    // });\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\r\n    <h3 class=\"py-1 text-center\">We've Got The Brands You're Looking For</h3>    \r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <mat-form-field  fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"w-100 brand-search\">\r\n            <input matInput placeholder=\"Search For Brands...\" [(ngModel)]=\"searchText\">\r\n        </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <mat-button-toggle-group #group=\"matButtonToggleGroup\" appearance=\"legacy\" value=\"all\" class=\"letters mt-2\">\r\n            <mat-button-toggle value=\"all\" class=\"letter\">\r\n              Show All Brands\r\n            </mat-button-toggle>\r\n            <mat-button-toggle *ngFor=\"let letter of letters\" [value]=\"letter\" class=\"letter\">\r\n              {{letter}}\r\n            </mat-button-toggle>\r\n        </mat-button-toggle-group>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"brands-container\">\r\n    <div class=\"brand-block text-center\" *ngFor=\"let brand of brands | brandSearchPipe : searchText  | filterBrands: group.value\">\r\n        <a [routerLink]=\"['/brands', brand.name]\" class=\"brand mat-elevation-z3\">\r\n            <img [src]=\"brand.image\">\r\n        </a>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { BrandsComponent } from './brands.component';\r\nimport { BrandComponent } from './brand/brand.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: BrandsComponent, pathMatch: 'full' },\r\n  { path: ':name', component: BrandComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    NgxPaginationModule,\r\n    SharedModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    BrandsComponent,\r\n    BrandComponent\r\n  ]\r\n})\r\nexport class BrandsModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}