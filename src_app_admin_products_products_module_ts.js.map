{"version":3,"file":"src_app_admin_products_products_module_ts.js","mappings":"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","sources":["./node_modules/ngx-image-zoom/__ivy_ngcc__/fesm2015/ngx-image-zoom.js","./src/app/admin/products/add-product/add-product.component.ts","./src/app/admin/products/add-product/add-product.component.html","./src/app/admin/products/categories/categories.component.ts","./src/app/admin/products/categories/categories.component.html","./src/app/admin/products/categories/category-dialog/category-dialog.component.ts","./src/app/admin/products/categories/category-dialog/category-dialog.component.html","./src/app/admin/products/material/material-dialog/material-dialog.component.ts","./src/app/admin/products/material/material-dialog/material-dialog.component.html","./src/app/admin/products/material/material.component.ts","./src/app/admin/products/material/material.component.html","./src/app/admin/products/product-color/color-dialog/color-dialog.component.ts","./src/app/admin/products/product-color/color-dialog/color-dialog.component.html","./src/app/admin/products/product-color/product-color.component.ts","./src/app/admin/products/product-color/product-color.component.html","./src/app/admin/products/product-detail/product-detail.component.ts","./src/app/admin/products/product-detail/product-detail.component.html","./src/app/admin/products/product-detail/product-zoom/product-zoom.component.ts","./src/app/admin/products/product-detail/product-zoom/product-zoom.component.html","./src/app/admin/products/product-list/product-list.component.ts","./src/app/admin/products/product-list/product-list.component.html","./src/app/admin/products/product-type/product-type.component.ts","./src/app/admin/products/product-type/product-type.component.html","./src/app/admin/products/product-type/producttypedialog/producttypedialog.component.ts","./src/app/admin/products/product-type/producttypedialog/producttypedialog.component.html","./src/app/admin/products/products.module.ts","./src/app/admin/products/subcategories/subcat-dialog/subcat-dialog.component.ts","./src/app/admin/products/subcategories/subcat-dialog/subcat-dialog.component.html","./src/app/admin/products/subcategories/subcategories.component.ts","./src/app/admin/products/subcategories/subcategories.component.html"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { EventEmitter, Renderer2, ViewChild, Output, Input, Component, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"zoomContainer\"];\nconst _c1 = [\"imageThumbnail\"];\nconst _c2 = [\"fullSizeImage\"];\nconst _c3 = function (a1) { return { \"ngxImageZoomFullContainer\": true, \"ngxImageZoomLensEnabled\": a1 }; };\nvar NgxImageZoomComponent_1;\r\nlet NgxImageZoomComponent = NgxImageZoomComponent_1 = class NgxImageZoomComponent {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.zoomScroll = new EventEmitter();\r\n        this.zoomPosition = new EventEmitter();\r\n        this.enableLens = false;\r\n        this.lensBorderRadius = 0;\r\n        this.lensWidth = 100;\r\n        this.lensHeight = 100;\r\n        this.zoomMode = 'hover';\r\n        this.magnification = 1;\r\n        this.enableScrollZoom = false;\r\n        this.scrollStepSize = 0.1;\r\n        this.circularLens = false;\r\n        this.maxZoomRatio = 2;\r\n        this.zoomingEnabled = false;\r\n        this.zoomFrozen = false;\r\n        this.isReady = false;\r\n        this.thumbImageLoaded = false;\r\n        this.fullImageLoaded = false;\r\n        this.eventListeners = [];\r\n    }\r\n    set setThumbImage(thumbImage) {\r\n        this.thumbImageLoaded = false;\r\n        this.isReady = false;\r\n        this.thumbImage = thumbImage;\r\n    }\r\n    set setFullImage(fullImage) {\r\n        this.fullImageLoaded = false;\r\n        this.isReady = false;\r\n        this.fullImage = fullImage;\r\n    }\r\n    set setZoomMode(zoomMode) {\r\n        if (NgxImageZoomComponent_1.validZoomModes.some(m => m === zoomMode)) {\r\n            this.zoomMode = zoomMode;\r\n        }\r\n    }\r\n    set setMagnification(magnification) {\r\n        this.magnification = Number(magnification) || this.magnification;\r\n        this.zoomScroll.emit(this.magnification);\r\n    }\r\n    set setMinZoomRatio(minZoomRatio) {\r\n        const ratio = Number(minZoomRatio) || this.minZoomRatio || this.baseRatio || 0;\r\n        this.minZoomRatio = Math.max(ratio, this.baseRatio || 0);\r\n    }\r\n    set setMaxZoomRatio(maxZoomRatio) {\r\n        this.maxZoomRatio = Number(maxZoomRatio) || this.maxZoomRatio;\r\n    }\r\n    set setScrollStepSize(stepSize) {\r\n        this.scrollStepSize = Number(stepSize) || this.scrollStepSize;\r\n    }\r\n    set setEnableLens(enable) {\r\n        this.enableLens = Boolean(enable);\r\n    }\r\n    set setLensWidth(width) {\r\n        this.lensWidth = Number(width) || this.lensWidth;\r\n    }\r\n    set setLensHeight(height) {\r\n        this.lensHeight = Number(height) || this.lensHeight;\r\n    }\r\n    set setCircularLens(enable) {\r\n        this.circularLens = Boolean(enable);\r\n    }\r\n    set setEnableScrollZoom(enable) {\r\n        this.enableScrollZoom = Boolean(enable);\r\n    }\r\n    ngOnInit() {\r\n        this.setUpEventListeners();\r\n    }\r\n    ngOnChanges() {\r\n        if (this.enableLens) {\r\n            if (this.circularLens) {\r\n                this.lensBorderRadius = this.lensWidth / 2;\r\n            }\r\n            else {\r\n                this.lensBorderRadius = 0;\r\n            }\r\n        }\r\n        this.calculateRatioAndOffset();\r\n        this.calculateImageAndLensPosition();\r\n    }\r\n    ngOnDestroy() {\r\n        this.eventListeners.forEach((destroyFn) => destroyFn());\r\n    }\r\n    /**\r\n     * Template helper methods\r\n     */\r\n    onThumbImageLoaded() {\r\n        this.thumbImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    onFullImageLoaded() {\r\n        this.fullImageLoaded = true;\r\n        this.checkImagesLoaded();\r\n    }\r\n    setUpEventListeners() {\r\n        if (this.zoomMode === 'hover') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', (event) => this.hoverMouseEnter(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.hoverMouseLeave()));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.hoverMouseMove(event)));\r\n        }\r\n        else if (this.zoomMode === 'toggle') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.toggleClick(event)));\r\n        }\r\n        else if (this.zoomMode === 'click') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.clickStarter(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.clickMouseLeave()));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.clickMouseMove(event)));\r\n        }\r\n        else if (this.zoomMode === 'hover-freeze') {\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseenter', (event) => this.hoverFreezeMouseEnter(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mouseleave', () => this.hoverFreezeMouseLeave()));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousemove', (event) => this.hoverFreezeMouseMove(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'click', (event) => this.hoverFreezeClick(event)));\r\n        }\r\n        if (this.enableScrollZoom) {\r\n            // Chrome: 'mousewheel', Firefox: 'DOMMouseScroll', IE: 'onmousewheel'\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'mousewheel', (event) => this.onMouseWheel(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'DOMMouseScroll', (event) => this.onMouseWheel(event)));\r\n            this.eventListeners.push(this.renderer.listen(this.zoomContainer.nativeElement, 'onmousewheel', (event) => this.onMouseWheel(event)));\r\n        }\r\n        if (this.enableLens && this.circularLens) {\r\n            this.lensBorderRadius = this.lensWidth / 2;\r\n        }\r\n    }\r\n    checkImagesLoaded() {\r\n        this.calculateRatioAndOffset();\r\n        if (this.thumbImageLoaded && this.fullImageLoaded) {\r\n            this.calculateImageAndLensPosition();\r\n            this.isReady = true;\r\n        }\r\n    }\r\n    /**\r\n     * Zoom position setters\r\n     */\r\n    setZoomPosition(left, top) {\r\n        this.latestMouseLeft = Number(left) || this.latestMouseLeft;\r\n        this.latestMouseTop = Number(top) || this.latestMouseTop;\r\n        const c = {\r\n            x: this.latestMouseLeft,\r\n            y: this.latestMouseTop\r\n        };\r\n        this.zoomPosition.emit(c);\r\n    }\r\n    /**\r\n     * Mouse wheel event\r\n     */\r\n    onMouseWheel(event) {\r\n        // Don't eat events if zooming isn't active\r\n        if (!this.zoomingEnabled || this.zoomFrozen) {\r\n            return;\r\n        }\r\n        event = window.event || event; // old IE\r\n        const direction = Math.max(Math.min((event.wheelDelta || -event.detail), 1), -1);\r\n        if (direction > 0) {\r\n            // up\r\n            this.setMagnification = Math.min(this.magnification + this.scrollStepSize, this.maxZoomRatio);\r\n        }\r\n        else {\r\n            // down\r\n            this.setMagnification = Math.max(this.magnification - this.scrollStepSize, this.minZoomRatio);\r\n        }\r\n        this.calculateRatio();\r\n        this.calculateZoomPosition(event);\r\n        // Prevent scrolling on page.\r\n        event.returnValue = false; // IE\r\n        if (event.preventDefault) {\r\n            event.preventDefault(); // Chrome & FF\r\n        }\r\n    }\r\n    /**\r\n     * Hover mode\r\n     */\r\n    hoverMouseEnter(event) {\r\n        this.zoomOn(event);\r\n    }\r\n    hoverMouseLeave() {\r\n        this.zoomOff();\r\n    }\r\n    hoverMouseMove(event) {\r\n        this.calculateZoomPosition(event);\r\n    }\r\n    /**\r\n     * Toggle mode\r\n     */\r\n    toggleClick(event) {\r\n        if (this.zoomingEnabled) {\r\n            this.zoomOff();\r\n        }\r\n        else {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    /**\r\n     * Click mode\r\n     */\r\n    clickStarter(event) {\r\n        if (this.zoomingEnabled === false) {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    clickMouseLeave() {\r\n        this.zoomOff();\r\n    }\r\n    clickMouseMove(event) {\r\n        if (this.zoomingEnabled) {\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    /**\r\n     * Hover freeze mode\r\n     */\r\n    hoverFreezeMouseEnter(event) {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    hoverFreezeMouseLeave() {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.zoomOff();\r\n        }\r\n    }\r\n    hoverFreezeMouseMove(event) {\r\n        if (this.zoomingEnabled && !this.zoomFrozen) {\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    hoverFreezeClick(event) {\r\n        if (this.zoomingEnabled && this.zoomFrozen) {\r\n            this.zoomFrozen = false;\r\n            this.zoomOff();\r\n        }\r\n        else if (this.zoomingEnabled) {\r\n            this.zoomFrozen = true;\r\n        }\r\n        else {\r\n            this.zoomOn(event);\r\n        }\r\n    }\r\n    /**\r\n     * Private helper methods\r\n     */\r\n    zoomOn(event) {\r\n        if (this.isReady) {\r\n            this.zoomingEnabled = true;\r\n            this.calculateRatioAndOffset();\r\n            this.display = 'block';\r\n            this.calculateZoomPosition(event);\r\n        }\r\n    }\r\n    zoomOff() {\r\n        this.zoomingEnabled = false;\r\n        this.display = 'none';\r\n    }\r\n    calculateZoomPosition(event) {\r\n        const newLeft = Math.max(Math.min(event.offsetX, this.thumbWidth), 0);\r\n        const newTop = Math.max(Math.min(event.offsetY, this.thumbHeight), 0);\r\n        this.setZoomPosition(newLeft, newTop);\r\n        this.calculateImageAndLensPosition();\r\n    }\r\n    calculateImageAndLensPosition() {\r\n        let lensLeftMod = 0;\r\n        let lensTopMod = 0;\r\n        if (this.enableLens) {\r\n            lensLeftMod = this.lensLeft = this.latestMouseLeft - this.lensWidth / 2;\r\n            lensTopMod = this.lensTop = this.latestMouseTop - this.lensHeight / 2;\r\n        }\r\n        this.fullImageLeft = (this.latestMouseLeft * -this.xRatio) - lensLeftMod;\r\n        this.fullImageTop = (this.latestMouseTop * -this.yRatio) - lensTopMod;\r\n    }\r\n    calculateRatioAndOffset() {\r\n        this.thumbWidth = this.imageThumbnail.nativeElement.width;\r\n        this.thumbHeight = this.imageThumbnail.nativeElement.height;\r\n        // If lens is disabled, set lens size to equal thumb size and position it on top of the thumb\r\n        if (!this.enableLens) {\r\n            this.lensWidth = this.thumbWidth;\r\n            this.lensHeight = this.thumbHeight;\r\n            this.lensLeft = 0;\r\n            this.lensTop = 0;\r\n        }\r\n        // getBoundingClientRect() ? https://stackoverflow.com/a/44008873\r\n        this.offsetTop = this.imageThumbnail.nativeElement.getBoundingClientRect().top;\r\n        this.offsetLeft = this.imageThumbnail.nativeElement.getBoundingClientRect().left;\r\n        if (this.fullImage === undefined) {\r\n            this.fullImage = this.thumbImage;\r\n        }\r\n        if (this.fullImageLoaded) {\r\n            this.fullWidth = this.fullSizeImage.nativeElement.naturalWidth;\r\n            this.fullHeight = this.fullSizeImage.nativeElement.naturalHeight;\r\n            this.baseRatio = Math.max((this.thumbWidth / this.fullWidth), (this.thumbHeight / this.fullHeight));\r\n            // Don't allow zooming to smaller than thumbnail size\r\n            this.minZoomRatio = Math.max(this.minZoomRatio || 0, this.baseRatio || 0);\r\n            this.calculateRatio();\r\n        }\r\n    }\r\n    calculateRatio() {\r\n        this.magnifiedWidth = (this.fullWidth * this.magnification);\r\n        this.magnifiedHeight = (this.fullHeight * this.magnification);\r\n        this.xRatio = (this.magnifiedWidth - this.thumbWidth) / this.thumbWidth;\r\n        this.yRatio = (this.magnifiedHeight - this.thumbHeight) / this.thumbHeight;\r\n    }\r\n};\nNgxImageZoomComponent.ɵfac = function NgxImageZoomComponent_Factory(t) { return new (t || NgxImageZoomComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNgxImageZoomComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxImageZoomComponent, selectors: [[\"lib-ngx-image-zoom\"]], viewQuery: function NgxImageZoomComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n        ɵngcc0.ɵɵviewQuery(_c1, 7);\n        ɵngcc0.ɵɵviewQuery(_c2, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.zoomContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.imageThumbnail = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullSizeImage = _t.first);\n    } }, inputs: { setThumbImage: [\"thumbImage\", \"setThumbImage\"], setFullImage: [\"fullImage\", \"setFullImage\"], setZoomMode: [\"zoomMode\", \"setZoomMode\"], setMagnification: [\"magnification\", \"setMagnification\"], setMinZoomRatio: [\"minZoomRatio\", \"setMinZoomRatio\"], setMaxZoomRatio: [\"maxZoomRatio\", \"setMaxZoomRatio\"], setScrollStepSize: [\"scrollStepSize\", \"setScrollStepSize\"], setEnableLens: [\"enableLens\", \"setEnableLens\"], setLensWidth: [\"lensWidth\", \"setLensWidth\"], setLensHeight: [\"lensHeight\", \"setLensHeight\"], setCircularLens: [\"circularLens\", \"setCircularLens\"], setEnableScrollZoom: [\"enableScrollZoom\", \"setEnableScrollZoom\"] }, outputs: { zoomScroll: \"zoomScroll\", zoomPosition: \"zoomPosition\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 31, consts: [[1, \"ngxImageZoomContainer\"], [\"zoomContainer\", \"\"], [1, \"ngxImageZoomThumbnail\", 3, \"src\", \"load\"], [\"imageThumbnail\", \"\"], [3, \"ngClass\"], [1, \"ngxImageZoomFull\", 3, \"src\", \"load\"], [\"fullSizeImage\", \"\"]], template: function NgxImageZoomComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"img\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_2_listener() { return ctx.onThumbImageLoaded(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"img\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"load\", function NgxImageZoomComponent_Template_img_load_5_listener() { return ctx.onFullImageLoaded(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.thumbWidth, \"px\")(\"height\", ctx.thumbHeight, \"px\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"src\", ctx.thumbImage, ɵngcc0.ɵɵsanitizeUrl);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"top\", ctx.lensTop, \"px\")(\"left\", ctx.lensLeft, \"px\")(\"width\", ctx.lensWidth, \"px\")(\"height\", ctx.lensHeight, \"px\")(\"border-radius\", ctx.lensBorderRadius, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(29, _c3, ctx.enableLens));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"top\", ctx.fullImageTop, \"px\")(\"left\", ctx.fullImageLeft, \"px\")(\"width\", ctx.magnifiedWidth, \"px\")(\"height\", ctx.magnifiedHeight, \"px\");\n        ɵngcc0.ɵɵproperty(\"src\", ctx.fullImage, ɵngcc0.ɵɵsanitizeUrl);\n    } }, directives: [ɵngcc1.NgClass], styles: [\".ngxImageZoomContainer[_ngcontent-%COMP%]{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail[_ngcontent-%COMP%]{pointer-events:all}.ngxImageZoomFull[_ngcontent-%COMP%]{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer[_ngcontent-%COMP%]{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled[_ngcontent-%COMP%]{border:2px solid red;cursor:crosshair;pointer-events:none}\"] });\r\nNgxImageZoomComponent.validZoomModes = ['hover', 'toggle', 'click', 'hover-freeze'];\r\nNgxImageZoomComponent.ctorParameters = () => [\r\n    { type: Renderer2 }\r\n];\r\n__decorate([\r\n    ViewChild('zoomContainer', { static: true })\r\n], NgxImageZoomComponent.prototype, \"zoomContainer\", void 0);\r\n__decorate([\r\n    ViewChild('imageThumbnail', { static: true })\r\n], NgxImageZoomComponent.prototype, \"imageThumbnail\", void 0);\r\n__decorate([\r\n    ViewChild('fullSizeImage', { static: true })\r\n], NgxImageZoomComponent.prototype, \"fullSizeImage\", void 0);\r\n__decorate([\r\n    Output()\r\n], NgxImageZoomComponent.prototype, \"zoomScroll\", void 0);\r\n__decorate([\r\n    Output()\r\n], NgxImageZoomComponent.prototype, \"zoomPosition\", void 0);\r\n__decorate([\r\n    Input('thumbImage')\r\n], NgxImageZoomComponent.prototype, \"setThumbImage\", null);\r\n__decorate([\r\n    Input('fullImage')\r\n], NgxImageZoomComponent.prototype, \"setFullImage\", null);\r\n__decorate([\r\n    Input('zoomMode')\r\n], NgxImageZoomComponent.prototype, \"setZoomMode\", null);\r\n__decorate([\r\n    Input('magnification')\r\n], NgxImageZoomComponent.prototype, \"setMagnification\", null);\r\n__decorate([\r\n    Input('minZoomRatio')\r\n], NgxImageZoomComponent.prototype, \"setMinZoomRatio\", null);\r\n__decorate([\r\n    Input('maxZoomRatio')\r\n], NgxImageZoomComponent.prototype, \"setMaxZoomRatio\", null);\r\n__decorate([\r\n    Input('scrollStepSize')\r\n], NgxImageZoomComponent.prototype, \"setScrollStepSize\", null);\r\n__decorate([\r\n    Input('enableLens')\r\n], NgxImageZoomComponent.prototype, \"setEnableLens\", null);\r\n__decorate([\r\n    Input('lensWidth')\r\n], NgxImageZoomComponent.prototype, \"setLensWidth\", null);\r\n__decorate([\r\n    Input('lensHeight')\r\n], NgxImageZoomComponent.prototype, \"setLensHeight\", null);\r\n__decorate([\r\n    Input('circularLens')\r\n], NgxImageZoomComponent.prototype, \"setCircularLens\", null);\r\n__decorate([\r\n    Input('enableScrollZoom')\r\n], NgxImageZoomComponent.prototype, \"setEnableScrollZoom\", null);\n\nlet NgxImageZoomModule = class NgxImageZoomModule {\r\n};\nNgxImageZoomModule.ɵfac = function NgxImageZoomModule_Factory(t) { return new (t || NgxImageZoomModule)(); };\nNgxImageZoomModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxImageZoomModule });\nNgxImageZoomModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n        ]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxImageZoomComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-ngx-image-zoom',\n                template: \"<div #zoomContainer class=\\\"ngxImageZoomContainer\\\"\\n     [style.width.px]=\\\"this.thumbWidth\\\" [style.height.px]=\\\"this.thumbHeight\\\">\\n\\n  <img #imageThumbnail class=\\\"ngxImageZoomThumbnail\\\" [src]=\\\"thumbImage\\\" (load)=\\\"onThumbImageLoaded()\\\"/>\\n\\n  <div [ngClass]=\\\"{'ngxImageZoomFullContainer': true, 'ngxImageZoomLensEnabled': this.enableLens}\\\"\\n       [style.display]=\\\"this.display\\\"\\n       [style.top.px]=\\\"this.lensTop\\\"\\n       [style.left.px]=\\\"this.lensLeft\\\"\\n       [style.width.px]=\\\"this.lensWidth\\\"\\n       [style.height.px]=\\\"this.lensHeight\\\"\\n       [style.border-radius.px]=\\\"this.lensBorderRadius\\\"\\n  >\\n    <img #fullSizeImage class=\\\"ngxImageZoomFull\\\" [src]=\\\"fullImage\\\"\\n         (load)=\\\"onFullImageLoaded()\\\"\\n         [style.display]=\\\"this.display\\\"\\n         [style.top.px]=\\\"this.fullImageTop\\\"\\n         [style.left.px]=\\\"this.fullImageLeft\\\"\\n         [style.width.px]=\\\"this.magnifiedWidth\\\"\\n         [style.height.px]=\\\"this.magnifiedHeight\\\"\\n    />\\n  </div>\\n</div>\\n\",\n                styles: [\".ngxImageZoomContainer{position:relative;margin:auto;overflow:hidden;pointer-events:none}.ngxImageZoomThumbnail{pointer-events:all}.ngxImageZoomFull{position:absolute;max-width:none;max-height:none;display:none;pointer-events:none}.ngxImageZoomFullContainer{position:absolute;overflow:hidden;pointer-events:none}.ngxImageZoomFullContainer.ngxImageZoomLensEnabled{border:2px solid red;cursor:crosshair;pointer-events:none}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { zoomScroll: [{\n            type: Output\n        }], zoomPosition: [{\n            type: Output\n        }], setThumbImage: [{\n            type: Input,\n            args: ['thumbImage']\n        }], setFullImage: [{\n            type: Input,\n            args: ['fullImage']\n        }], setZoomMode: [{\n            type: Input,\n            args: ['zoomMode']\n        }], setMagnification: [{\n            type: Input,\n            args: ['magnification']\n        }], setMinZoomRatio: [{\n            type: Input,\n            args: ['minZoomRatio']\n        }], setMaxZoomRatio: [{\n            type: Input,\n            args: ['maxZoomRatio']\n        }], setScrollStepSize: [{\n            type: Input,\n            args: ['scrollStepSize']\n        }], setEnableLens: [{\n            type: Input,\n            args: ['enableLens']\n        }], setLensWidth: [{\n            type: Input,\n            args: ['lensWidth']\n        }], setLensHeight: [{\n            type: Input,\n            args: ['lensHeight']\n        }], setCircularLens: [{\n            type: Input,\n            args: ['circularLens']\n        }], setEnableScrollZoom: [{\n            type: Input,\n            args: ['enableScrollZoom']\n        }], zoomContainer: [{\n            type: ViewChild,\n            args: ['zoomContainer', { static: true }]\n        }], imageThumbnail: [{\n            type: ViewChild,\n            args: ['imageThumbnail', { static: true }]\n        }], fullSizeImage: [{\n            type: ViewChild,\n            args: ['fullSizeImage', { static: true }]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxImageZoomModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxImageZoomComponent,\n                ],\n                imports: [\n                    CommonModule,\n                ],\n                exports: [\n                    NgxImageZoomComponent\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxImageZoomModule, { declarations: function () { return [NgxImageZoomComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxImageZoomComponent]; } }); })();\n\n/*\r\n * Public API Surface of ngx-image-zoom\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxImageZoomComponent, NgxImageZoomModule };\n\n","import { Component, OnInit,ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Category } from 'src/app/app.models';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService } from 'src/app/data.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TransitionCheckState } from '@angular/material/checkbox';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { globalData } from 'src/app/globalVar';\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss']\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public colors = [\"#5C6BC0\", \"#66BB6A\", \"#EF5350\", \"#BA68C8\", \"#FF4081\", \"#9575CD\", \"#90CAF9\", \"#B2DFDB\", \"#DCE775\", \"#FFD740\", \"#00E676\", \"#FBC02D\", \"#FF7043\", \"#F5F5F5\", \"#696969\"];\r\n  public sizes = [\"S\", \"M\", \"L\", \"XL\", \"2XL\", \"32\", \"36\", \"38\", \"46\", \"52\", \"13.3\\\"\", \"15.4\\\"\", \"17\\\"\", \"21\\\"\", \"23.4\\\"\"];\r\n  public selectedColors: string;\r\n  public adminCategories: any = [];\r\n  private sub: any;\r\n  public id: any;\r\n  user = \"admin@gmail.com\";\r\n  isLinear = true;\r\n  infoFormGroup: FormGroup;\r\n  descFormGroup: FormGroup;\r\n  priceFormGroup: FormGroup;\r\n  imgFormGroup: FormGroup;\r\n  submitInfoData: any;\r\n  submitConfirmData: any;\r\n  stepperVal: any;\r\n  adminSubs: any = [];\r\n  adminTypes: any = [];\r\n  adminMaterials: any = [];\r\n  adminColors: any = [];\r\n  getProductData: any = [];\r\n  getProductData_copy: any = [];\r\n  submitImgData: any;\r\n  catval: any;\r\n  subcatval: any;\r\n  material: any;\r\n  color: any;\r\n  ptype: any;\r\n  unitval: any;\r\n  offer_price: any;\r\n  sell_price: any;\r\n  discount_val: any;\r\n  getCat: any;\r\n  getSub: any;\r\n  prodName: any;\r\n  getProdType: any;\r\n  getProdCol: any;\r\n  getProdUnit: any;\r\n  getProdMat: any;\r\n  getVendor: any;\r\n  getWeight: any;\r\n  getHeight: any;\r\n  getWidth: any;\r\n  getDepth:any;\r\n  getHistory: any;\r\n  getU: any\r\n  getDesc: any;\r\n  getCp: any;\r\n  getSp: any;\r\n  getOp: any;\r\n  getDis: any;\r\n  getSGST: any;\r\n  getCGST: any;\r\n  getHSN: any;\r\n  infoItemId:any;\r\n  images:any=[];\r\n  getImageData:any;\r\n  url=globalData.apiUrl\r\n  hideImgId:any;\r\n  delImgData:any;\r\n  units: any = [\r\n    { id: 'cm', value: 'cm' },\r\n    { id: 'm', value: 'm' },\r\n    { id: 'inch', value: 'inch' }\r\n  ]\r\n  constructor(private http:HttpClient,private router:Router, private _snackBar: MatSnackBar, private dataServe: DataService, private _formBuilder: FormBuilder, public appService: AppService, public formBuilder: FormBuilder, private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.infoFormGroup = this._formBuilder.group({\r\n      itemName: ['', Validators.required],\r\n      cat_id: ['', Validators.required],\r\n      subcat_id: ['', Validators.required],\r\n      hsn_code: ['', Validators.required],\r\n     \r\n    });\r\n    this.descFormGroup = this._formBuilder.group({\r\n      p_type: ['', Validators.required],\r\n      materials: ['', Validators.required],\r\n      colors: ['', Validators.required],\r\n      itemWeight: ['', Validators.required],\r\n      itemHeight: ['', Validators.required],\r\n      itemWidth: ['', Validators.required],\r\n      itemdepth: ['', Validators.required],\r\n      unit: ['', Validators.required],\r\n      // vendor: ['', Validators.required],\r\n      history: [''],\r\n      desc: ['']\r\n    });\r\n    this.imgFormGroup=this._formBuilder.group({\r\n      images:['']\r\n    })\r\n    this.priceFormGroup = this._formBuilder.group({\r\n      cp: ['', Validators.required],\r\n      sp: ['', Validators.required],\r\n      dis: ['', Validators.required],\r\n      op: [''],\r\n      sgst: ['', Validators.required],\r\n      cgst: ['', Validators.required],\r\n    });\r\n    this.form = this.formBuilder.group({\r\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(4)])],\r\n      'images': null,\r\n      \"oldPrice\": null,\r\n      \"newPrice\": [null, Validators.required],\r\n      \"discount\": null,\r\n      \"description\": null,\r\n      \"availibilityCount\": null,\r\n      \"color\": null,\r\n      \"size\": null,\r\n      \"weight\": null,\r\n      \"categoryId\": [null, Validators.required]\r\n    });\r\n    this.getCategories();\r\n    this.getMaterials();\r\n    this.getColors();\r\n    this.getTypes()\r\n    this.sub = this.activatedRoute.params.subscribe(params => {\r\n      if (params['id']) {\r\n        this.id = params['id'];\r\n        this.isLinear = this.id ? false : true;\r\n        this.getProductsById(this.id);\r\n        // this.getProductById();\r\n\r\n      }\r\n    \r\n    });\r\n  }\r\n  public getProductsById(p_id: any) {\r\n    this.dataServe.adminGetAllProductsById(p_id).subscribe(data => {\r\n      console.log(data)\r\n      this.getProductData = data;\r\n      this.getProductData_copy = data;\r\n      this.getProductData = this.getProductData.msg[0];\r\n      this.getProductData_copy =this.id>0? this.getProductData_copy.msg[1]:null;\r\n      this.getCat = this.getProductData.cat_id;\r\n      this.getSub = this.getProductData.sub_cat_id;\r\n      this.prodName = this.getProductData.prod_name;\r\n      this.getProdType = this.getProductData.prod_type_id;\r\n      this.getProdCol = this.getProductData.prod_color_id;\r\n      this.getProdMat = this.getProductData.prod_material_id;\r\n      this.getWeight = this.getProductData.prod_weight;\r\n      this.getHeight = this.getProductData.prod_height;\r\n      this.getWidth = this.getProductData.prod_width;\r\n      this.getDepth = this.getProductData.prod_depth;\r\n      this.getU = this.getProductData.dimention_unit;\r\n      this.getHistory = this.getProductData.prod_history;\r\n      // this.getVendor = this.getProductData.prod_vendor;\r\n      this.getDesc = this.getProductData.prod_desc;\r\n      console.log(this.getHistory + \" \" + this.getDesc + \" \" + this.getVendor)\r\n      this.getCp = this.getProductData.prod_cp;\r\n      this.getSp = this.getProductData.prod_sp;\r\n      this.getOp = this.getProductData.offer_price;\r\n      this.getDis = this.getProductData.discount;\r\n      this.getCGST = this.getProductData.cgst;\r\n      this.getSGST = this.getProductData.sgst;\r\n      this.getHSN = this.getProductData.hsn_code;      \r\n      this.getImageData=this.getProductData_copy ? this.getProductData_copy.img : [];\r\n      this.getSubs(this.getProductData.cat_id);\r\n      this.getCol(this.getProdCol);\r\n      this.getMat(this.getProdMat);\r\n      this.getUnit(this.getU);\r\n      this.getType(this.getProdType)\r\n      console.log(this.adminSubs);\r\n      this.infoFormGroup.patchValue({\r\n        \"itemName\": this.prodName,\r\n        \"cat_id\":this.getCat,\r\n        \"subcat_id\":this.getSub,\r\n        \"hsn_code\":this.getHSN\r\n      })\r\n      this.descFormGroup.patchValue({\r\n        \"p_type\": this.getProdType,\r\n        \"materials\": this.getProdMat,\r\n        \"colors\": this.getProdCol,\r\n        \"itemWeight\":  this.getWeight,\r\n        \"itemHeight\":this.getHeight,\r\n        \"itemWidth\":  this.getWidth,\r\n        \"itemDepth\":  this.getDepth,\r\n        \"unit\":this.getU,\r\n        // \"vendor\":this.getVendor,\r\n        \"history\":this.getHistory,\r\n        \"desc\":  this.getDesc\r\n      })\r\n      this.priceFormGroup.patchValue({\r\n        \"cp\": this.getCp,\r\n        \"sp\": this.getSp,\r\n        \"dis\":this.getDis,\r\n        \"op\":this.getOp,\r\n        \"sgst\":this.getSGST,\r\n        \"cgst\":this.getCGST,\r\n      });\r\n\r\n    })\r\n  }\r\n  public getColors() {\r\n\r\n    this.dataServe.adminGetColors().subscribe(data => {\r\n      this.adminColors = data\r\n      this.adminColors = this.adminColors.msg\r\n      console.log(this.adminColors)\r\n    })\r\n  }\r\n  public getMaterials() {\r\n\r\n    this.dataServe.adminGetMaterials().subscribe(data => {\r\n      this.adminMaterials = data\r\n      this.adminMaterials = this.adminMaterials.msg\r\n      console.log(this.adminMaterials)\r\n    })\r\n  }\r\n  public getCategories() {\r\n    this.dataServe.adminGetCategories().subscribe(data => {\r\n      this.adminCategories = data;\r\n      this.adminCategories = this.adminCategories.msg;\r\n    });\r\n  }\r\n  public getTypes() {\r\n    //for fetching admin categories\r\n    this.dataServe.adminGetProducts().subscribe(data => {\r\n      this.adminTypes = data\r\n      this.adminTypes = this.adminTypes.msg\r\n      console.log(this.adminTypes)\r\n    })\r\n  }\r\n  // public getProductById() {\r\n  //   this.appService.getProductById(this.id).subscribe((data: any) => {\r\n  //     this.form.patchValue(data);\r\n  //     this.selectedColors = data.color;\r\n  //     const images: any[] = [];\r\n  //     data.images.forEach(item => {\r\n  //       let image = {\r\n  //         link: item.medium,\r\n  //         preview: item.medium\r\n  //       }\r\n  //       images.push(image);\r\n  //     })\r\n  //     this.form.controls.images.setValue(images);\r\n  //   });\r\n  // }\r\n\r\n  public onSubmit() {\r\n    console.log(this.form.value);\r\n  }\r\n\r\n  public onColorSelectionChange(event: any) {\r\n    if (event.value) {\r\n      this.selectedColors = event.value.join();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  getSubs(v: any) {\r\n    this.catval = v;\r\n    this.infoFormGroup.value.cat_id = this.catval\r\n    this.dataServe.adminGetSubcategoriesbyCat_id(v).subscribe(data => {\r\n      this.adminSubs = data\r\n      this.adminSubs = this.adminSubs.msg\r\n      console.log(this.adminSubs)\r\n    })\r\n  }\r\n  getSubCat(v: any) {\r\n    this.subcatval = v;\r\n    this.infoFormGroup.value.subcat_id = this.subcatval;\r\n  }\r\n  getType(v: any) {\r\n    this.ptype = v;\r\n    this.descFormGroup.value.p_type = this.ptype;\r\n  }\r\n  getMat(v: any) {\r\n    this.material = v;\r\n    this.descFormGroup.value.materials = this.material\r\n  }\r\n  getCol(v: any) {\r\n    this.color = v;\r\n    this.descFormGroup.value.colors = v;\r\n  }\r\n  getUnit(v: any) {\r\n    this.unitval = v;\r\n    this.descFormGroup.value.unit = v;\r\n  }\r\n  submitInfo() {\r\n    console.log({\"itemName\":this.infoFormGroup.get('itemName').value,'cat_id':this.infoFormGroup.get('cat_id').value,'subcat_id':this.infoFormGroup.get('subcat_id').value})\r\n  }\r\n  submitDesc() {\r\n    console.log(this.descFormGroup.value)\r\n  }\r\n  submitPrice(){\r\n    console.log(this.priceFormGroup.value)\r\n\r\n  }\r\n  submitImage(){\r\n    console.log(this.imgFormGroup.value)\r\n  }\r\n  submitData() {\r\n    console.log(this.infoFormGroup.value);\r\n    console.log(this.descFormGroup.value);\r\n    console.log(this.priceFormGroup.value);\r\n    console.log(this.imgFormGroup.value)\r\n    var info_dt = {\r\n      id: this.id?this.id:0,\r\n      cat_id: this.infoFormGroup.value.cat_id,\r\n      sub_cat_id: this.infoFormGroup.value.subcat_id,\r\n      prod_name: this.infoFormGroup.value.itemName,\r\n      offer_price:this.infoFormGroup.value.op,\r\n      hsn_code:this.infoFormGroup.value.hsn_code,\r\n      user: this.user\r\n    }\r\nif(this.id){\r\n    this.dataServe.adminPostInfo(info_dt).subscribe(data => {\r\n      console.log(data);\r\n      this.submitInfoData = data;\r\n      if (this.submitInfoData.suc == 1) {\r\n        var desc_dt = {\r\n          id: this.id?this.id:0,\r\n          item_id: this.submitInfoData.item_id,\r\n          prod_type_id: this.descFormGroup.value.p_type,\r\n          prod_color_id: this.descFormGroup.value.colors,\r\n          prod_material_id: this.descFormGroup.value.materials,\r\n          prod_height: this.descFormGroup.value.itemHeight,\r\n          prod_width: this.descFormGroup.value.itemWidth,\r\n          prod_depth: this.descFormGroup.value.itemDepth,\r\n          dimention_unit: this.descFormGroup.value.unit,\r\n          prod_weight: this.descFormGroup.value.itemWeight,\r\n          // prod_vendor: this.descFormGroup.value.vendor,\r\n          prod_history: this.descFormGroup.value.history,\r\n          prod_desc: this.descFormGroup.value.desc,\r\n          user: this.user\r\n        }\r\n        var price_dt = {\r\n          id: this.id?this.id:0,\r\n          item_id: this.submitInfoData.item_id,\r\n          prod_cp: this.priceFormGroup.value.cp,\r\n          prod_sp: this.priceFormGroup.value.sp,\r\n          discount: this.priceFormGroup.value.dis,\r\n          offer_price:this.priceFormGroup.value.op,\r\n          // offer_price: this.offer_price,\r\n          sgst: this.priceFormGroup.value.sgst,\r\n          cgst: this.priceFormGroup.value.cgst,\r\n          user: this.user\r\n        }\r\n        this.dataServe.adminPostDesc(desc_dt).subscribe(data => {\r\n          console.log(data)\r\n        })\r\n\r\n        this.dataServe.adminPostPrice(price_dt).subscribe(data => {\r\n          console.log(data);\r\n          this.submitConfirmData = data;\r\n          // if (this.submitConfirmData.suc == 1) {\r\n          //   // this.stepperVal = document.getElementById('resetStep');\r\n          //   // this.stepperVal.click();\r\n          //   this.openSnackBar(this.submitConfirmData.msg, 'Redirecting...');\r\n          // }\r\n        })\r\n        var imgDt={\r\n          prod_name: this.infoFormGroup.value.itemName,\r\n          img:this.imgFormGroup.value\r\n        }\r\n         for(let i=0;i<this.imgFormGroup.value.images.length;i++){\r\n           this.images[i]=this.imgFormGroup.value.images[i].file;\r\n         }\r\n         this.dataServe.adminPostImages(imgDt.prod_name,this.images,this.id,this.user).subscribe(data=>{\r\n          console.log(data)\r\n            this.submitImgData=data;\r\n            if (this.submitImgData.suc == 1) {\r\n              // this.stepperVal = document.getElementById('resetStep');\r\n              // this.stepperVal.click();\r\n              this.openSnackBar(this.submitImgData.msg, 'Redirecting...');\r\n            }\r\n        })\r\n      }\r\n    })\r\n  }\r\n  else{\r\n    this.dataServe.adminPostInfo(info_dt).subscribe(data => {\r\n      console.log(data);\r\n      this.submitInfoData = data;\r\n      this.infoItemId=this.submitInfoData.item_id;\r\n    \r\n        var desc_dt = {\r\n          id: this.id?this.id:0,\r\n          item_id: this.infoItemId,\r\n          prod_type_id: this.descFormGroup.value.p_type,\r\n          prod_color_id: this.descFormGroup.value.colors,\r\n          prod_material_id: this.descFormGroup.value.materials,\r\n          prod_height: this.descFormGroup.value.itemHeight,\r\n          prod_width: this.descFormGroup.value.itemWidth,\r\n          prod_depth: this.descFormGroup.value.itemDepth,\r\n          dimention_unit: this.descFormGroup.value.unit,\r\n          prod_weight: this.descFormGroup.value.itemWeight,\r\n          // prod_vendor: this.descFormGroup.value.vendor,\r\n          prod_history: this.descFormGroup.value.history,\r\n          prod_desc: this.descFormGroup.value.desc,\r\n          user: this.user\r\n        }\r\n      \r\n        var price_dt = {\r\n          id: this.id?this.id:0,\r\n          item_id: this.infoItemId,\r\n          prod_cp: this.priceFormGroup.value.cp,\r\n          prod_sp: this.priceFormGroup.value.sp,\r\n          discount: this.priceFormGroup.value.dis,\r\n          // offer_price:this.priceFormGroup.value.op,\r\n          offer_price: this.offer_price,\r\n          sgst: this.priceFormGroup.value.sgst,\r\n          cgst: this.priceFormGroup.value.cgst,\r\n          user: this.user\r\n        }\r\n        var imgDt={\r\n          prod_name: this.infoFormGroup.value.itemName,\r\n          img:this.imgFormGroup.value\r\n        }\r\n         for(let i=0;i<this.imgFormGroup.value.images.length;i++){\r\n           this.images[i]=this.imgFormGroup.value.images[i].file;\r\n         }\r\n        this.dataServe.adminPostDesc(desc_dt).subscribe(data => {\r\n          console.log(data)\r\n        })\r\n        this.dataServe.adminPostPrice(price_dt).subscribe(data => {\r\n          console.log(data);\r\n          this.submitConfirmData = data;\r\n         \r\n       \r\n      })\r\n     \r\n      this.dataServe.adminPostImages(imgDt.prod_name,this.images,this.infoItemId,this.user).subscribe(data=>{\r\n        console.log(data)\r\n          this.submitImgData=data;\r\n          if (this.submitImgData.suc == 1) {\r\n            // this.stepperVal = document.getElementById('resetStep');\r\n            // this.stepperVal.click();\r\n            this.openSnackBar(this.submitImgData.msg, 'Redirecting...');\r\n          }\r\n      })\r\n    })\r\n  }\r\n  \r\n  }\r\n  calc_dis(e: any) {\r\n    this.sell_price = document.getElementById('sell_price');\r\n    this.discount_val = e.target.value;\r\n    this.offer_price = Number(this.sell_price.value) - Number(this.sell_price.value * (this.discount_val / 100));\r\n    this.priceFormGroup.value.op = this.offer_price\r\n    console.log(this.offer_price);\r\n    this.priceFormGroup.patchValue({\"op\":this.offer_price});    // this.offer_price=Number(this.offer_price)\r\n\r\n  }\r\n  openSnackBar(message: string, action: string) {\r\n    this._snackBar.open(message, action);\r\n\r\n    setTimeout(() => {\r\n      this._snackBar.dismiss();\r\n      this.router.navigate(['/admin/products/product-list'])\r\n     \r\n    }, 2500)\r\n  }\r\n  show() {\r\n    alert('eii');\r\n  }\r\n  delete_img(id:any,path:any){\r\n    console.log(id);\r\n    console.log(path)\r\n   this.dataServe.adminDelPrevImg(id,path).subscribe(data=>{console.log(data)\r\n    this.delImgData=data\r\n    if(this.delImgData.suc==1){\r\n     this.hideImgId=document.getElementById('img_'+id)\r\n     this.hideImgId.remove();\r\n    }\r\n  })\r\n  }\r\n}\r\n\r\n","<div class=\"p-1\">\r\n  <mat-card>\r\n    <mat-card-header>\r\n      <mat-card-title>{{(id) ? 'Edit' : 'Add New'}} Product</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-stepper [linear]=\"isLinear\" #stepper id=\"stepper\">\r\n        <mat-step [stepControl]=\"infoFormGroup\">\r\n          <form [formGroup]=\"infoFormGroup\">\r\n            <ng-template matStepLabel>Basic Info.</ng-template>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Category</mat-label>\r\n              <mat-select #catVal (selectionChange)=\"getSubs(catVal.value)\" formControlName=\"cat_id\">\r\n                <mat-option *ngFor=\"let cat of adminCategories\" [value]=\"cat.id\">\r\n                  {{cat.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Sub-Category</mat-label>\r\n              <mat-select #subVal (selectionChange)=\"getSubCat(subVal.value)\" formControlName=\"subcat_id\">\r\n                <mat-option *ngFor=\"let subcat of adminSubs\" [value]=\"subcat.id\">\r\n                  {{subcat.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Item Name</mat-label>\r\n              <input matInput formControlName=\"itemName\" required>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>HSN Code</mat-label>\r\n              <input matInput formControlName=\"hsn_code\" required [value]=\"getHSN\">\r\n            </mat-form-field>\r\n\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" matStepperNext (click)=\"submitInfo()\">Next</button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"descFormGroup\" label=\"Description\">\r\n          <form [formGroup]=\"descFormGroup\">\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Product Type</mat-label>\r\n              <mat-select #typeVal (selectionChange)=\"getType(typeVal.value)\" formControlName=\"p_type\">\r\n                <mat-option *ngFor=\"let p of adminTypes\" [value]=\"p.id\">\r\n                  {{p.type_name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Material</mat-label>\r\n              <mat-select #matVal (selectionChange)=\"getMat(matVal.value)\" formControlName=\"materials\">\r\n                <mat-option *ngFor=\"let mat of adminMaterials\" [value]=\"mat.id\">\r\n                  {{mat.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Color</mat-label>\r\n              <mat-select #colVal (selectionChange)=\"getCol(colVal.value)\" formControlName=\"colors\">\r\n                <mat-option *ngFor=\"let color of adminColors\" [value]=\"color.id\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                      {{color.color_name}}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <!-- <div class=\"color_div\" [ngStyle]=\"{'background-color':color.color_code}\">\r\n\r\n                           </div> -->\r\n\r\n                  </div>\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n              <mat-label>Weight</mat-label>\r\n              <input matInput formControlName=\"itemWeight\" required [value]=\"getWeight\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"field_measure\" style=\"width:8%;\">\r\n              <mat-label>Height</mat-label>\r\n              <input matInput formControlName=\"itemHeight\" required [value]=\"getHeight\">\r\n            </mat-form-field>\r\n            x\r\n            <mat-form-field appearance=\"fill\" style=\"width:8%;\">\r\n              <mat-label>Width</mat-label>\r\n              <input matInput formControlName=\"itemWidth\" required [value]=\"getWidth\">\r\n            </mat-form-field>\r\n            x\r\n            <mat-form-field appearance=\"fill\" style=\"width:8%;\">\r\n              <mat-label>Depth</mat-label>\r\n              <input matInput formControlName=\"itemWidth\" required [value]=\"getDepth\">\r\n            </mat-form-field> &nbsp;\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\" style=\"width:8%;\">\r\n              <mat-label>Unit</mat-label>\r\n              <mat-select #uVal (selectionChange)=\"getUnit(uVal.value)\" formControlName=\"unit\">\r\n                <mat-option *ngFor=\"let u of units\" [value]=\"u.id\">\r\n                  {{u.value}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <!-- <mat-form-field appearance=\"fill\" style=\"width:67%;\">\r\n              <mat-label>Vendor</mat-label>\r\n              <textarea cdkFocusInitial matInput formControlName=\"vendor\" [value]=\"getVendor\"></textarea>\r\n            </mat-form-field> -->\r\n            <mat-form-field appearance=\"fill\" style=\"width:98%;\">\r\n              <mat-label>History/About Artisan</mat-label>\r\n              <textarea matInput formControlName=\"history\" [value]=\"getHistory\"></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" style=\"width:98%;\">\r\n              <mat-label>Short Description</mat-label>\r\n              <textarea matInput formControlName=\"desc\" [value]=\"getDesc\"></textarea>\r\n            </mat-form-field>\r\n            <div>\r\n              <button mat-raised-button color=\"primary\" matStepperPrevious class=\"shift_field\">Back</button>\r\n              <button mat-raised-button color=\"primary\" matStepperNext (click)=\"submitDesc()\">Next</button>\r\n            </div>\r\n          </form>\r\n        </mat-step>\r\n\r\n        <mat-step [stepControl]=\"priceFormGroup\">\r\n          <form [formGroup]=\"priceFormGroup\">\r\n            <ng-template matStepLabel>Pricing</ng-template>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Cost Price</mat-label>\r\n              <input matInput formControlName=\"cp\" required [value]=\"getCp\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Selling Price</mat-label>\r\n              <input id=\"sell_price\" matInput formControlName=\"sp\" required [value]=\"getSp\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Discount (%)</mat-label>\r\n              <input (change)=\"calc_dis($event)\" id=\"discount_per\" matInput formControlName=\"dis\" required\r\n                [value]=\"getDis\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>Offer Price</mat-label>\r\n              <!-- <input readonly [value]=\"offer_price\" matInput formControlName=\"op\" [value]=\"getOp\"> -->\r\n              <input readonly [value]=\"offer_price\" matInput formControlName=\"op\">\r\n\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>SGST (%)</mat-label>\r\n              <input matInput formControlName=\"sgst\" required [value]=\"getSGST\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\" class=\"shift_field\">\r\n              <mat-label>CGST (%)</mat-label>\r\n              <input matInput formControlName=\"cgst\" required [value]=\"getCGST\">\r\n            </mat-form-field>\r\n          \r\n            <div>\r\n              <button mat-raised-button color=\"primary\" matStepperNext (click)=\"submitPrice()\">Next</button>\r\n              <!-- <button *ngIf=\"!id\" mat-raised-button id=\"resetStep\"  color=\"warn\" (click)=\"stepper.reset()\">Reset</button> -->\r\n            </div>\r\n          </form>\r\n          <!-- <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n          </div> -->\r\n        </mat-step>\r\n        <mat-step [stepControl]=\"imgFormGroup\" label=\"Images\">\r\n          <form [formGroup]=\"imgFormGroup\">\r\n\r\n            <div fxFlex=\"40\" class=\"px-2\">\r\n              <p class=\"mt-1\"><span class=\"uppercase fw-500\">Gallery</span><span class=\"text-muted px-1\">(max 6\r\n                  images)</span></p>\r\n              <input-file formControlName=\"images\" fileLimit=\"6\" fileAccept=\"image/*\"></input-file>\r\n            </div>\r\n            <div *ngFor=\"let i of getImageData\">\r\n\r\n              <div *ngIf=\"id\" class=\"container\" id=\"img_{{i.id}}\">\r\n                <img height=\"100\" width=\"100\" clas=\"image\" [src]=\"url+'/'+i.img_path\" alt=\"\">\r\n                <div class=\"overlay\">\r\n                  <a style=\"cursor: pointer;\" (click)=\"delete_img(i.id,i.img_path)\" class=\"icon\" title=\"User Profile\">\r\n                    <mat-icon>close</mat-icon>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"px-2\">\r\n              <button mat-raised-button color=\"primary\" matStepperNext (click)=\"submitData()\">Submit</button>\r\n              <button *ngIf=\"!id\" mat-raised-button id=\"resetStep\" color=\"warn\" (click)=\"stepper.reset()\">Reset</button>\r\n            </div>\r\n\r\n          </form>\r\n        </mat-step>\r\n      </mat-stepper>\r\n      <!-- <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\" fxLayout=\"row wrap\">\r\n                <div fxFlex=\"40\" class=\"px-2\"> \r\n                    <p class=\"mt-1\"><span class=\"uppercase fw-500\">Gallery</span><span class=\"text-muted px-1\">(max 8 images)</span></p>  \r\n                    <input-file formControlName=\"images\" fileLimit=\"8\" fileAccept=\"image/*\"></input-file>  \r\n                </div>\r\n                <div fxFlex=\"60\" class=\"px-2\">\r\n                    <div fxLayout=\"row wrap\">\r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Name</mat-label>\r\n                                <input matInput formControlName=\"name\" required>\r\n                                <mat-error *ngIf=\"form.controls.name.errors?.required\">Name is required</mat-error>\r\n                                <mat-error *ngIf=\"form.controls.name.hasError('minlength')\">Name isn't long enough, minimum of 4 characters</mat-error>\r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Category</mat-label>\r\n                                <mat-select formControlName=\"categoryId\" required>\r\n                                    <mat-option *ngFor=\"let cat of categories\" [value]=\"cat.id\">\r\n                                        <span>{{cat.name}}</span>\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                                <mat-error *ngIf=\"form.controls.categoryId.errors?.required\">Category is required</mat-error>\r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Old Price</mat-label>\r\n                                <input matInput formControlName=\"oldPrice\">\r\n                                <mat-error *ngIf=\"form.controls.oldPrice.errors?.required\">Old Price is required</mat-error>\r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>New Price</mat-label>\r\n                                <input matInput formControlName=\"newPrice\" required>\r\n                                <mat-error *ngIf=\"form.controls.newPrice.errors?.required\">New Price is required</mat-error>\r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Discount</mat-label>\r\n                                <input matInput formControlName=\"discount\" type=\"number\"> \r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Availibility Count</mat-label>\r\n                                <input matInput formControlName=\"availibilityCount\" type=\"number\"> \r\n                            </mat-form-field>\r\n                        </div> \r\n\r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Color</mat-label>\r\n                                <mat-select formControlName=\"color\" multiple  (selectionChange)=\"onColorSelectionChange($event)\">\r\n                                    <mat-select-trigger>{{selectedColors}}</mat-select-trigger>\r\n                                    <mat-option *ngFor=\"let color of colors\" [value]=\"color\">\r\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                                            <span>{{color}}</span>\r\n                                            <mat-icon [style.color]=\"color\">fiber_manual_record</mat-icon>\r\n                                        </div> \r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Size</mat-label>\r\n                                <mat-select formControlName=\"size\" multiple>\r\n                                    <mat-option *ngFor=\"let size of sizes\" [value]=\"size\">\r\n                                        <span>{{size}}</span>\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div> \r\n                        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.3\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Weight</mat-label>\r\n                                <input matInput formControlName=\"weight\" type=\"number\"> \r\n                            </mat-form-field>\r\n                        </div> \r\n\r\n                        <div fxFlex=\"100\" class=\"px-1\">\r\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                <mat-label>Description</mat-label> \r\n                                <textarea matInput formControlName=\"description\" rows=\"7\"></textarea> \r\n                            </mat-form-field> \r\n                        </div> \r\n                       \r\n\r\n\r\n                        <div fxFlex=\"100\" class=\"mt-2 text-center w-100\">\r\n                            <button mat-raised-button color=\"primary\" type=\"submit\">SUBMIT</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form> -->\r\n    </mat-card-content>\r\n\r\n\r\n\r\n  </mat-card>\r\n</div>\r\n<!-- <button mat-stroked-button [hidden]=\"true\">Show snack-bar</button> -->","import { Component, OnInit } from '@angular/core';\r\nimport { adminCategory, Category } from 'src/app/app.models';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { CategoryDialogComponent } from './category-dialog/category-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { DataService } from 'src/app/data.service';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\nexport class CategoriesComponent implements OnInit {\r\n  public categories:Category[] = []; \r\n  public adminCategories:any=[];\r\n  public page: any;\r\n  public count = 6;\r\n  public settings:Settings;\r\n  constructor(public appService: AppService, public dialog: MatDialog, public appSettings:AppSettings,private dataServe:DataService) {\r\n    this.settings = this.appSettings.settings;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCategories();\r\n  }\r\n\r\n  public getCategories(){   \r\n     //for fetching admin categories\r\n    this.dataServe.adminGetCategories().subscribe(data=>{\r\n      this.adminCategories=data\r\n      this.adminCategories=this.adminCategories.msg\r\n      console.log(this.adminCategories)\r\n    })\r\n  }\r\n\r\n\r\n  public onPageChanged(event){\r\n    this.page = event; \r\n    window.scrollTo(0,0); \r\n  }\r\n\r\n  public openCategoryDialog(data:any){\r\n    console.log(data)\r\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\r\n      data: {\r\n        category: data,\r\n        categories: this.adminCategories\r\n      },\r\n      panelClass: ['theme-dialog'],\r\n      autoFocus: true,\r\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr'\r\n    });\r\n    dialogRef.afterClosed().subscribe(category => { \r\n      if(category){    \r\n        const index: number = this.adminCategories.findIndex(x => x.id == category.id);\r\n        if(index !== -1){\r\n          this.adminCategories[index] = category;\r\n        } \r\n        else{ \r\n          let last_category = this.adminCategories[this.adminCategories.length - 1]; \r\n          category.id = last_category.id + 1;\r\n          this.adminCategories.push(category);  \r\n        }          \r\n      }\r\n    });\r\n  }\r\n\r\n  public remove(category:any){  \r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"400px\",\r\n      data: {\r\n        title: \"Confirm Action\",\r\n        message: \"Are you sure you want remove this category?\"\r\n      }\r\n    }); \r\n    dialogRef.afterClosed().subscribe(dialogResult => { \r\n      if(dialogResult){\r\n        const index: number = this.adminCategories.indexOf(category);\r\n        if (index !== -1) {\r\n          this.dataServe.adminDeleteCategories(category).subscribe(data=>{\r\n            console.log(data)\r\n          })\r\n          this.adminCategories.splice(index, 1);  \r\n        } \r\n      } \r\n    }); \r\n  }\r\n\r\n}\r\n","<div class=\"p-1\">\r\n    <mat-card class=\"p-0\"> \r\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\r\n            <h2>Category List</h2> \r\n            <button mat-raised-button color=\"primary\" (click)=\"openCategoryDialog(null)\">Add Category</button>\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"mat-table admin-table\">\r\n            <div class=\"mat-header-row\">\r\n                <div class=\"mat-header-cell\">ID</div>\r\n\r\n                <div class=\"mat-header-cell\">Name</div>\r\n                <!-- <div class=\"mat-header-cell\">Has SubCategory</div> \r\n                <div class=\"mat-header-cell\">Parent Category</div>  -->\r\n                <div class=\"mat-header-cell\"></div>\r\n            </div>\r\n            <!-- <div *ngFor=\"let cat of categories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\"> -->\r\n                <div *ngFor=\"let cat of adminCategories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\">\r\n                <div class=\"mat-cell\">{{i+1}}</div>\r\n                <div class=\"mat-cell\">{{cat.name}}</div>\r\n                <!-- <div class=\"mat-cell\">\r\n                    <mat-icon class=\"text-muted\">{{ (cat.hasSubCategory) ? 'check_box' : 'check_box_outline_blank'}}</mat-icon> \r\n                </div>  \r\n                <div class=\"mat-cell\">\r\n                    {{ ( categories | filterById : cat.parentId )?.name }}\r\n                </div>    -->\r\n                <div class=\"mat-cell\">\r\n                    <div class=\"p-1 actions\">          \r\n                        <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"openCategoryDialog(cat)\">\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                        <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(cat)\">\r\n                            <mat-icon>delete</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </div>      \r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n\r\n    <div *ngIf=\"adminCategories.length > 0\" fxLayout=\"row wrap\">\r\n        <div fxFlex=\"100\"> \r\n            <mat-card class=\"p-0 text-center\">           \r\n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DataService } from 'src/app/data.service';\r\n\r\n@Component({\r\n  selector: 'app-category-dialog',\r\n  templateUrl: './category-dialog.component.html',\r\n  styleUrls: ['./category-dialog.component.scss']\r\n})\r\nexport class CategoryDialogComponent implements OnInit {\r\n  public form: FormGroup;\r\n  user=\"admin@gmail.com\"\r\n  constructor(public dialogRef: MatDialogRef<CategoryDialogComponent>, \r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              public fb: FormBuilder,\r\n              public dataServe:DataService\r\n              ) { }\r\n\r\n  ngOnInit(): void { \r\n    this.form = this.fb.group({\r\n      id: 0,\r\n      name: [null, Validators.required],\r\n      user: this.user\r\n    }); \r\n\r\n    if(this.data.category){\r\n      this.form.patchValue(this.data.category); \r\n    };\r\n  }\r\n\r\n  public onSubmit(){\r\n    console.log(this.form.value);\r\n    if(this.form.valid){\r\n      this.dialogRef.close(this.form.value);\r\n      this.dataServe.adminPostCategories(this.form.value).subscribe(data=>{\r\n        console.log(data)\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Category</h1>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\r\n    <div mat-dialog-content>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Name</mat-label>\r\n                    <input matInput formControlName=\"name\" autofocus required>\r\n                    <mat-error *ngIf=\"form.controls.name.errors?.required\">Name is required</mat-error> \r\n                </mat-form-field>\r\n            </div> \r\n            <!-- <div fxFlex=\"100\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Parent category</mat-label>\r\n                    <mat-select formControlName=\"parentId\">\r\n                        <mat-option *ngFor=\"let cat of data.categories\" [value]=\"cat.id\">\r\n                            <span>{{cat.name}}</span>\r\n                        </mat-option>\r\n                    </mat-select> \r\n                </mat-form-field>\r\n            </div>  -->\r\n            <!-- <div fxFlex=\"100\" class=\"py-1\">    \r\n                <mat-checkbox formControlName=\"hasSubCategory\" color=\"primary\">Has SubCategory</mat-checkbox>\r\n            </div>  -->\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \r\n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\r\n        </div> \r\n    </div>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-material-dialog',\n  templateUrl: './material-dialog.component.html',\n  styleUrls: ['./material-dialog.component.scss']\n})\nexport class MaterialDialogComponent implements OnInit {\n\n  public form: FormGroup;\n  user=\"admin@gmail.com\"\n  constructor(public dialogRef: MatDialogRef<MaterialDialogComponent>, \n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public fb: FormBuilder,\n              public dataServe:DataService\n              ) { }\n\n  ngOnInit(): void { \n    this.form = this.fb.group({\n      id: 0,\n      name: [null, Validators.required],\n      user: this.user\n    }); \n\n    if(this.data.material){\n      this.form.patchValue(this.data.material); \n    };\n  }\n\n  public onSubmit(){\n    console.log(this.form.value);\n    if(this.form.valid){\n      this.dialogRef.close(this.form.value);\n      this.dataServe.adminPostMaterials(this.form.value).subscribe(data=>{\n        console.log(data)\n      })\n    }\n  }\n\n}\n","<h1 mat-dialog-title>Material</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <div mat-dialog-content>\n        <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.name.errors?.required\">Name is required</mat-error> \n                </mat-form-field>\n            </div> \n            <!-- <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Parent category</mat-label>\n                    <mat-select formControlName=\"parentId\">\n                        <mat-option *ngFor=\"let cat of data.categories\" [value]=\"cat.id\">\n                            <span>{{cat.name}}</span>\n                        </mat-option>\n                    </mat-select> \n                </mat-form-field>\n            </div>  -->\n            <!-- <div fxFlex=\"100\" class=\"py-1\">    \n                <mat-checkbox formControlName=\"hasSubCategory\" color=\"primary\">Has SubCategory</mat-checkbox>\n            </div>  -->\n        </div>\n    </div>\n    <div mat-dialog-actions>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n        </div> \n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { adminCategory, Category } from 'src/app/app.models';\nimport { AppService } from 'src/app/app.service';\n// import { CategoryDialogComponent } from './category-dialog/category-dialog.component';\nimport { MaterialDialogComponent } from './material-dialog/material-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-material',\n  templateUrl: './material.component.html',\n  styleUrls: ['./material.component.scss']\n})\nexport class MaterialComponent implements OnInit {\n\n  public categories:Category[] = []; \n  public adminMaterials:any=[];\n  public page: any;\n  public count = 6;\n  public settings:Settings;\n  constructor(public appService: AppService, public dialog: MatDialog, public appSettings:AppSettings,private dataServe:DataService) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit(): void {\n    this.getMaterials();\n  }\n\n  public getMaterials(){   \n    //template\n    // this.appService.getCategories().subscribe(data => {\n    //   this.categories = data; \n    //   this.categories.shift();\n    // }); \n\n    //for fetching admin categories\n    this.dataServe.adminGetMaterials().subscribe(data=>{\n      this.adminMaterials=data\n      this.adminMaterials=this.adminMaterials.msg\n      console.log(this.adminMaterials)\n    })\n  }\n\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public openMatDialog(data:any){\n    const dialogRef = this.dialog.open(MaterialDialogComponent, {\n      data: {\n        material: data,\n        materials: this.adminMaterials\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: true,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr'\n    });\n    dialogRef.afterClosed().subscribe(material => { \n      if(material){    \n        const index: number = this.adminMaterials.findIndex(x => x.id == material.id);\n        if(index !== -1){\n          this.adminMaterials[index] = material;\n        } \n        else{ \n          let last_material = this.adminMaterials[this.adminMaterials.length - 1]; \n          material.id = last_material.id + 1;\n          this.adminMaterials.push(material);  \n        }          \n      }\n    });\n  }\n\n  public remove(material:any){  \n    const dialogRef = this.dialog.open(MaterialDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this material?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.adminMaterials.indexOf(material);\n        if (index !== -1) {\n          this.dataServe.adminDeleteMaterials(material).subscribe(data=>{\n            console.log(data)\n          })\n          this.adminMaterials.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\"> \n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\n            <h2>Material List</h2> \n            <button mat-raised-button color=\"primary\" (click)=\"openMatDialog(null)\">Add Material</button>\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"mat-table admin-table\">\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">ID</div>\n\n                <div class=\"mat-header-cell\">Name</div>\n                <!-- <div class=\"mat-header-cell\">Has SubCategory</div> \n                <div class=\"mat-header-cell\">Parent Category</div>  -->\n                <div class=\"mat-header-cell\"></div>\n            </div>\n            <!-- <div *ngFor=\"let cat of categories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\"> -->\n                <div *ngFor=\"let mat of adminMaterials | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\">\n                <div class=\"mat-cell\">{{i+1}}</div>\n                <div class=\"mat-cell\">{{mat.name}}</div>\n                <!-- <div class=\"mat-cell\">\n                    <mat-icon class=\"text-muted\">{{ (cat.hasSubCategory) ? 'check_box' : 'check_box_outline_blank'}}</mat-icon> \n                </div>  \n                <div class=\"mat-cell\">\n                    {{ ( categories | filterById : cat.parentId )?.name }}\n                </div>    -->\n                <div class=\"mat-cell\">\n                    <div class=\"p-1 actions\">          \n                        <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"openMatDialog(mat)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(mat)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </div>\n                </div>      \n            </div>\n        </div>\n    </mat-card>\n\n    <div *ngIf=\"adminMaterials.length > 0\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100\"> \n            <mat-card class=\"p-0 text-center\">           \n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-color-dialog',\n  templateUrl: './color-dialog.component.html',\n  styleUrls: ['./color-dialog.component.scss']\n})\nexport class ColorDialogComponent implements OnInit {\n  public form: FormGroup;\n  user=\"admin@gmail.com\"\n  constructor(public dialogRef: MatDialogRef<ColorDialogComponent>, \n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public fb: FormBuilder,\n              public dataServe:DataService\n              ) { }\n\n  ngOnInit(): void { \n    this.form = this.fb.group({\n      id: 0,\n      color_name: [null, Validators.required],\n      color_code: [null, Validators.required],\n      user: this.user\n    }); \n\n    if(this.data.color){\n      this.form.patchValue(this.data.color); \n    };\n  }\n\n  public onSubmit(){\n    console.log(this.form.value);\n    if(this.form.valid){\n      this.dialogRef.close(this.form.value);\n      this.dataServe.adminPostColors(this.form.value).subscribe(data=>{\n        console.log(data)\n      })\n    }\n  }\n\n\n}\n","<h1 mat-dialog-title>Color</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <div mat-dialog-content>\n        <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"color_name\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.color_name.errors?.required\">Name is required</mat-error> \n                </mat-form-field>\n            </div> \n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Code</mat-label>\n                    <input type=\"color\" matInput formControlName=\"color_code\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.color_code.errors?.required\">Code is required</mat-error> \n                </mat-form-field>\n               \n\n                \n            </div> \n            <!-- <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Parent category</mat-label>\n                    <mat-select formControlName=\"parentId\">\n                        <mat-option *ngFor=\"let cat of data.categories\" [value]=\"cat.id\">\n                            <span>{{cat.name}}</span>\n                        </mat-option>\n                    </mat-select> \n                </mat-form-field>\n            </div>  -->\n            <!-- <div fxFlex=\"100\" class=\"py-1\">    \n                <mat-checkbox formControlName=\"hasSubCategory\" color=\"primary\">Has SubCategory</mat-checkbox>\n            </div>  -->\n        </div>\n    </div>\n    <div mat-dialog-actions>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n        </div> \n    </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { adminCategory, Category } from 'src/app/app.models';\nimport { AppService } from 'src/app/app.service';\n// import { CategoryDialogComponent } from './category-dialog/category-dialog.component';\nimport { ColorDialogComponent } from './color-dialog/color-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-product-color',\n  templateUrl: './product-color.component.html',\n  styleUrls: ['./product-color.component.scss']\n})\nexport class ProductColorComponent implements OnInit {\n  public categories:Category[] = []; \n  public adminColors:any=[];\n  public page: any;\n  public count = 6;\n  public settings:Settings;\n  constructor(public appService: AppService, public dialog: MatDialog, public appSettings:AppSettings,private dataServe:DataService) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit(): void {\n    this.getColors();\n  }\n\n  public getColors(){   \n    //template\n    // this.appService.getCategories().subscribe(data => {\n    //   this.categories = data; \n    //   this.categories.shift();\n    // }); \n\n    //for fetching admin categories\n    this.dataServe.adminGetColors().subscribe(data=>{\n      this.adminColors=data\n      this.adminColors=this.adminColors.msg\n      console.log(this.adminColors)\n    })\n  }\n\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public openColorDialog(data:any){\n    const dialogRef = this.dialog.open(ColorDialogComponent, {\n      data: {\n        color: data,\n        colors: this.adminColors\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: true,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr'\n    });\n    dialogRef.afterClosed().subscribe(color => { \n      if(color){    \n        const index: number = this.adminColors.findIndex(x => x.id == color.id);\n        if(index !== -1){\n          this.adminColors[index] = color;\n        } \n        else{ \n          let last_color = this.adminColors[this.adminColors.length - 1]; \n          color.id = last_color.id + 1;\n          this.adminColors.push(color);  \n        }          \n      }\n    });\n  }\n\n  public remove(color:any){  \n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this color?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.adminColors.indexOf(color);\n        if (index !== -1) {\n          this.dataServe.adminDeleteColors(color).subscribe(data=>{\n            console.log(data)\n          })\n          this.adminColors.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\"> \n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\n            <h2>Color List</h2> \n            <button mat-raised-button color=\"primary\" (click)=\"openColorDialog(null)\">Add Color</button>\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"mat-table admin-table\">\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">ID</div>\n\n                <div class=\"mat-header-cell\">Color</div>\n                <div class=\"mat-header-cell\">Code</div> \n                <div class=\"mat-header-cell\"></div> \n                <div class=\"mat-header-cell\"></div>\n            </div>\n            <!-- <div *ngFor=\"let cat of categories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\"> -->\n                <div *ngFor=\"let color of adminColors | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\">\n                <div class=\"mat-cell\">{{i+1}}</div>\n                <div class=\"mat-cell\">{{color.color_name}}</div>\n                <div class=\"mat-cell\">\n                    {{color.color_code}}\n                   \n                    <!-- <mat-icon class=\"text-muted\">{{ (cat.hasSubCategory) ? 'check_box' : 'check_box_outline_blank'}}</mat-icon>  -->\n                </div>  \n                <div class=\"mat-cell\">\n                    <div class=\"color_div\" [ngStyle]=\"{'background-color':color.color_code}\">\n\n                    </div>\n                </div>\n                <!-- <div class=\"mat-cell\">\n                    {{ ( categories | filterById : cat.parentId )?.name }}\n                </div>    -->\n                <div class=\"mat-cell\">\n                    <div class=\"p-1 actions\">          \n                        <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"openColorDialog(color)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(color)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </div>\n                </div>      \n            </div>\n        </div>\n    </mat-card>\n\n    <div *ngIf=\"adminColors.length > 0\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100\"> \n            <mat-card class=\"p-0 text-center\">           \n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { SwiperDirective, SwiperConfigInterface } from 'ngx-swiper-wrapper';\r\nimport { Product } from 'src/app/app.models';\r\nimport { ProductZoomComponent } from './product-zoom/product-zoom.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\r\nimport { DataService } from 'src/app/data.service';\r\nimport { globalData } from 'src/app/globalVar';\r\n\r\n@Component({\r\n  selector: 'app-product-detail',\r\n  templateUrl: './product-detail.component.html',\r\n  styleUrls: ['./product-detail.component.scss']\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  @ViewChild('zoomViewer') zoomViewer;\r\n  @ViewChild(SwiperDirective) directiveRef: SwiperDirective;\r\n  public config: SwiperConfigInterface={};\r\n  public product:any=[];\r\n  public image: any;\r\n  public zoomImage: any;\r\n  private sub: any;\r\n  public form: FormGroup;\r\n  url=globalData.apiUrl\r\n  prodCol:any=[];\r\n  lgImg:any;\r\n  constructor(private dataServe:DataService, public appService:AppService, private activatedRoute: ActivatedRoute, public dialog: MatDialog, public formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.activatedRoute.params.subscribe(params => {  \r\n      if(params['id']){\r\n        this.getProductById(params['id']); \r\n      } \r\n      // else{\r\n      //   this.getProductById(1); \r\n      // }\r\n    }); \r\n    this.form = this.formBuilder.group({ \r\n      'review': [null, Validators.required],            \r\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(4)])],\r\n      'email': [null, Validators.compose([Validators.required, emailValidator])]\r\n    }); \r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.config = {\r\n      observer: false,\r\n      slidesPerView: 4,\r\n      spaceBetween: 10,      \r\n      keyboard: true,\r\n      navigation: true,\r\n      pagination: false,       \r\n      loop: false, \r\n      preloadImages: false,\r\n      lazy: true, \r\n      breakpoints: {\r\n        480: {\r\n          slidesPerView: 2\r\n        },\r\n        600: {\r\n          slidesPerView: 3,\r\n        }\r\n      },\r\n      autoplay: {\r\n        delay: 5000,\r\n        disableOnInteraction: false\r\n      },\r\n    }\r\n  }\r\n\r\n  public getProductById(id:any){\r\n    this.dataServe.adminGetProductList(id).subscribe(data=>{\r\n      console.log(data)\r\n      this.product=data;\r\n      this.prodCol=data;\r\n      this.product=this.product.msg[0];\r\n      this.lgImg=this.product.img_path\r\n      this.prodCol=this.prodCol.msg[1];\r\n      this.selectImage(this.prodCol.img[0])\r\n      this.config = {\r\n        observer: false,\r\n        slidesPerView: 4,\r\n        spaceBetween: 10,      \r\n        keyboard: true,\r\n        navigation: true,\r\n        pagination: false,       \r\n        loop: false, \r\n        preloadImages: false,\r\n        lazy: true, \r\n        breakpoints: {\r\n          480: {\r\n            slidesPerView: 2\r\n          },\r\n          600: {\r\n            slidesPerView: 3,\r\n          }\r\n        },\r\n        autoplay: {\r\n          delay: 5000,\r\n          disableOnInteraction: false\r\n        },\r\n      }\r\n    })\r\n    // this.appService.getProductById(id).subscribe(data=>{\r\n    //   this.product = data;\r\n    //   this.image = data.images[0].medium;\r\n    //   this.zoomImage = data.images[0].big;\r\n    //   setTimeout(() => { \r\n    //     this.config.observer = true;\r\n    //    // this.directiveRef.setIndex(0);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  public selectImage(image){\r\n    // this.image = image.medium;\r\n    // this.image = \"/assets/images/products/headset/2-medium.png\";\r\n    // this.image=this.url+'/'+image.img_path\r\n    this.image=image\r\n    // this.zoomImage = image.big;\r\n    this.zoomImage = this.url+'/'+image.img_path;\r\n    this.lgImg=image.img_path\r\n  }\r\n\r\n  public onMouseMove(e){\r\n    if(window.innerWidth >= 1280){\r\n      var image, offsetX, offsetY, x, y, zoomer;\r\n      image = e.currentTarget; \r\n      offsetX = e.offsetX;\r\n      offsetY = e.offsetY;\r\n      x = offsetX/image.offsetWidth*100;\r\n      y = offsetY/image.offsetHeight*100;\r\n      zoomer = this.zoomViewer.nativeElement.children[0];\r\n      if(zoomer){\r\n        zoomer.style.backgroundPosition = x + '% ' + y + '%';\r\n        zoomer.style.display = \"block\";\r\n        zoomer.style.height = image.height + 'px';\r\n        zoomer.style.width = image.width + 'px';\r\n      }\r\n    }\r\n  }\r\n\r\n  public onMouseLeave(event){\r\n    this.zoomViewer.nativeElement.children[0].style.display = \"none\";\r\n  }\r\n\r\n  public openZoomViewer(){\r\n    this.dialog.open(ProductZoomComponent, {\r\n      data: this.zoomImage,\r\n      panelClass: 'zoom-dialog'\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  } \r\n  \r\n  public onSubmit(){ \r\n    if(this.form.valid){\r\n      console.log(this.form.value);\r\n    }\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row wrap\" class=\"p-1\">\r\n    <div fxFlex=\"100\" fxFlex.gt-md=\"45\"> \r\n        <mat-card class=\"product-image\">\r\n            <mat-chip-list *ngIf=\"product?.discount\">\r\n                <mat-chip color=\"warn\" selected=\"true\">{{product?.discount}}% OFF</mat-chip>\r\n            </mat-chip-list>\r\n            <button mat-icon-button (click)=\"openZoomViewer()\" fxHide=\"false\" fxHide.gt-md><mat-icon>fullscreen</mat-icon></button>\r\n         \r\n         \r\n            <!-- <lib-ngx-image-zoom\r\n            [thumbImage]=\"url+'/'+lgImg\"\r\n            [fullImage]=\"url+'/'+lgImg\"\r\n            zoomMode=\"'hover'\"\r\n            [magnification]=\"3\"\r\n            [enableScrollZoom]=\"true\"\r\n            [enableLens]=\"true\"\r\n            [lensWidth]=\"250\"\r\n            [lensHeight]=\"250\"\r\n            circularLens=\"true\"\r\n        ></lib-ngx-image-zoom> -->\r\n          <img *ngIf=\"lgImg\" [src]=\"url+'/'+lgImg\" (mousemove)=\"onMouseMove($event)\" (mouseleave)=\"onMouseLeave($event)\"/>\r\n         \r\n            <!-- <img src=\"/assets/images/products/headset/2-medium.png\" (mousemove)=\"onMouseMove($event)\" (mouseleave)=\"onMouseLeave($event)\"/> -->\r\n        </mat-card>  \r\n        <!-- save for later -->\r\n        <div class=\"small-carousel\"> \r\n            <div class=\"swiper-container\" [swiper]=\"config\">\r\n                <div class=\"swiper-wrapper\"> \r\n                    <div *ngFor=\"let image of prodCol.img\" class=\"swiper-slide\">\r\n                        <mat-card (click)=\"selectImage(image)\" class=\"p-1\">\r\n                            <img [src]=\"url+'/'+image.img_path\" class=\"swiper-lazy prod_img\"/>\r\n                            <div class=\"swiper-lazy-preloader\"></div>\r\n                        </mat-card>\r\n                    </div>                    \r\n                </div>\r\n                <button mat-icon-button class=\"swiper-button-prev swipe-arrow\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n                <button mat-icon-button class=\"swiper-button-next swipe-arrow\"><mat-icon>keyboard_arrow_right</mat-icon></button> \r\n            </div>\r\n        </div> \r\n    </div>\r\n    <div fxFlex=\"100\" fxFlex.gt-md=\"55\" ngClass.gt-sm=\"px-3 m-0\" ngClass.sm=\"mt-2\" ngClass.xs=\"mt-2\">\r\n        \r\n        <!-- save for later -->\r\n        <div #zoomViewer fxShow=\"false\" fxShow.gt-md>\r\n            <!-- <mat-card *ngIf=\"zoomImage\" class=\"zoom-viewer mat-elevation-z18\" [ngStyle]=\"{'background-image': 'url(' + zoomImage + ')'}\"></mat-card> -->\r\n            <mat-card class=\"zoom-viewer mat-elevation-z18\" [ngStyle]=\"{'background-image': 'url(' + zoomImage + ')'}\"></mat-card>\r\n        </div>\r\n\r\n        <h2>{{product?.prod_name}}</h2>\r\n        <div class=\"py-1 lh\">\r\n            <p><span class=\"text-muted fw-500\">Category: </span><span>{{product.cat_name}}</span></p>\r\n            <!-- <p><span class=\"text-muted fw-500\">Availibility: </span><span>{{ (product?.availibilityCount > 0) ? 'In stock':'Unavailable'}}</span></p> -->\r\n            <p><span class=\"text-muted fw-500\">Availibility: </span><span>{{ (5 > 0) ? 'In stock':'Unavailable'}}</span></p>\r\n            <p hidden><span class=\"text-muted fw-500\">Vendor: </span><span>{{product.prod_vendor}}</span></p>\r\n        </div>                 \r\n        <div class=\"py-1\">\r\n            <!-- <app-rating [ratingsCount]=\"product?.ratingsCount\" [ratingsValue]=\"product?.ratingsValue\" [direction]=\"'row'\"></app-rating> -->\r\n        </div>\r\n        <p class=\"py-1 text-muted lh\">{{product?.prod_desc}}</p>\r\n\r\n        <div class=\"divider mt-1\"></div>\r\n        <div class=\"py-2\">\r\n            <h3 class=\"old-price text-muted\"><span *ngIf=\"product.prod_sp!=product.offer_price\">&#8377;{{product?.prod_sp | number : '1.2-2'}}</span></h3>\r\n            <h2 class=\"new-price\">&#8377;{{product?.offer_price}}</h2>\r\n        </div>        \r\n\r\n         <!-- <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-between center\" class=\"details text-muted py-1\">\r\n            <div *ngIf=\"product?.color\" class=\"color\">\r\n                <span class=\"fw-500\">Select Color:</span>\r\n                <button mat-raised-button *ngFor=\"let color of product?.color\" [style.background]=\"color\">&nbsp;</button>              \r\n            </div>\r\n            <div *ngIf=\"product?.size\" class=\"size\" ngClass.xs=\"mt-1\">\r\n                <span class=\"fw-500\">Select Size:</span>\r\n                <button mat-raised-button *ngFor=\"let size of product?.size\">{{size}}</button>\r\n            </div>\r\n        </div>  -->\r\n\r\n        <div class=\"py-1\">\r\n            <app-controls [product]=\"product\" [type]=\"'all'\"></app-controls> \r\n        </div>\r\n\r\n        <div class=\"divider\"></div>\r\n\r\n        <!-- <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"text-muted py-1\">\r\n            <button mat-button><mat-icon>mail_outline</mat-icon> Email to a Friend</button>\r\n            <button mat-icon-button><mat-icon>share</mat-icon></button>\r\n        </div> -->\r\n\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"p-1 mt-2\">\r\n    <div fxFlex=\"100\">\r\n        <mat-card> \r\n            <mat-tab-group [@.disabled]=\"true\" [selectedIndex]=\"0\">       \r\n                <!-- <mat-tab label=\"Description\">\r\n                    <div class=\"full-desc lh\">\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris id nulla metus. Maecenas commodo turpis dui, porttitor tincidunt enim mollis a. Curabitur eu velit mi. Nullam congue turpis id metus sollicitudin, id cursus nulla laoreet. Proin commodo eu felis at malesuada. Nulla ac facilisis justo, eget vulputate ex. Nulla nec laoreet nulla. Cras auctor leo at diam congue, quis convallis urna pulvinar. Nunc ut mi nulla. Nunc ligula massa, vulputate sed scelerisque sit amet, dapibus semper est. Sed sed blandit turpis. Vestibulum id porttitor ligula, at iaculis ligula. Pellentesque vel tellus sit amet mauris aliquet bibendum id et lorem.</p>\r\n                        <ul class=\"px-2 mt-1\">\r\n                            <li>Phasellus eu justo dictum, varius eros ut, posuere sapien.</li>\r\n                            <li>Nulla eu erat sit amet enim lobortis rhoncus.</li>\r\n                            <li>Etiam eu mauris in massa convallis ornare non id ex.</li>\r\n                            <li>Nam sagittis augue at pretium pharetra.</li>\r\n                            <li>Sed a sem id massa egestas porta a sit amet felis.</li>\r\n                            <li>Duis aliquam urna in sapien cursus consequat.</li>\r\n                        </ul>\r\n                        <p class=\"mt-1\">Duis eu felis ultricies urna pharetra efficitur nec non elit. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Curabitur posuere eu justo eget mollis. Sed semper accumsan urna vel rutrum. Nulla condimentum quis lacus ut semper. Quisque at massa pretium, porta ligula ut, rutrum elit. Pellentesque et orci sit amet dolor laoreet tempor sed eu sem. Morbi lacinia pellentesque tellus euismod eleifend.</p>\r\n                        <p class=\"mt-1\">Quisque fringilla eros id ligula luctus, a gravida augue sodales. Sed eget augue ut lectus condimentum volutpat. Morbi quis nunc viverra, gravida arcu quis, varius metus. Praesent tincidunt ipsum est, quis molestie ligula efficitur ut. Nunc interdum erat eu tortor maximus suscipit. Vivamus nec laoreet dui. Nullam dignissim laoreet metus quis pretium.</p>\r\n                    </div>\r\n                </mat-tab> -->\r\n                <mat-tab label=\"History\">\r\n                    <div class=\"full-desc lh\">\r\n                        {{product.prod_history}}\r\n                    </div>\r\n                </mat-tab>\r\n                <mat-tab label=\"Additional information\">\r\n                    <div class=\"full-desc lh\">\r\n                        <p>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                        <ul class=\"px-2 mt-1\">\r\n                            <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</li>\r\n                            <li>Aenean vehicula, tortor gravida elementum tincidunt, justo lorem vestibulum ex, eget egestas arcu tellus in magna. Vivamus gravida, ipsum vel luctus luctus, nisi felis vestibulum est, nec interdum tellus leo quis tellus. Sed sit amet convallis enim, in laoreet orci.</li>\r\n                            <li>Donec et elit at nulla congue interdum sit amet varius erat.</li>\r\n                            <li>Nulla sit amet risus pellentesque, dignissim massa ut, dignissim arcu.</li>\r\n                            <li>Morbi dapibus ligula at faucibus tempus. Aenean vehicula, tortor gravida elementum tincidunt, justo lorem vestibulum ex, eget egestas arcu tellus in magna. Vivamus gravida, ipsum vel luctus luctus, nisi felis vestibulum est, nec interdum tellus leo quis tellus. Sed sit amet convallis enim, in laoreet orci.</li>\r\n                            <li>Nunc sodales justo ut nisi euismod, quis condimentum leo varius.</li>\r\n                        </ul>\r\n                        <ul class=\"px-2 mt-1\">\r\n                            <li>Phasellus eu justo dictum, varius eros ut, posuere sapien.</li>\r\n                            <li>Nulla eu erat sit amet enim lobortis rhoncus.</li>\r\n                            <li>Etiam eu mauris in massa convallis ornare non id ex.</li>\r\n                            <li>Nam sagittis augue at pretium pharetra.</li>\r\n                            <li>Sed a sem id massa egestas porta a sit amet felis.</li>\r\n                            <li>Duis aliquam urna in sapien cursus consequat. Aenean vehicula, tortor gravida elementum tincidunt, justo lorem vestibulum ex, eget egestas arcu tellus in magna. Vivamus gravida, ipsum vel luctus luctus, nisi felis vestibulum est, nec interdum tellus leo quis tellus. Sed sit amet convallis enim, in laoreet orci.</li>\r\n                        </ul>\r\n                    </div>\r\n                \r\n\r\n                </mat-tab>\r\n                <!-- <mat-tab label=\"Reviews\">\r\n                    <div class=\"full-desc lh\">\r\n                        <mat-list class=\"reviews\">\r\n                            <mat-list-item class=\"h-100 py-1\">\r\n                                <img matListAvatar [src]=\"'assets/images/avatars/avatar-1.png'\" alt=\"image\" class=\"review-author\">\r\n                                <p matLine fxLayoutAlign=\"start center\">\r\n                                    <span class=\"fw-500\">Bruno Vespa</span> \r\n                                    <mat-icon class=\"text-muted px-1\" matTooltip=\"Dissatisfied\" matTooltipPosition=\"after\">sentiment_dissatisfied</mat-icon>\r\n                                </p>\r\n                                <p matLine class=\"text-muted\"><small>13 January, 2018 at 7:09</small></p>\r\n                                <p matLine class=\"text\">Integer id eros et mi fringilla imperdiet. In dictum turpis eget magna viverra condimentum. Ut malesuada interdum ultrices. Proin tristique sem pellentesque, posuere dui in, maximus magna. Aenean vehicula, tortor gravida elementum tincidunt, justo lorem vestibulum ex, eget egestas arcu tellus in magna.</p>\r\n                            </mat-list-item>\r\n                            <mat-list-item class=\"h-100 py-1\">\r\n                                <img matListAvatar [src]=\"'assets/images/avatars/avatar-2.png'\" alt=\"image\" class=\"review-author\">\r\n                                <p matLine fxLayoutAlign=\"start center\">\r\n                                    <span class=\"fw-500\">Julia Aniston</span> \r\n                                    <mat-icon class=\"text-muted px-1\" matTooltip=\"Very Satisfied\" matTooltipPosition=\"after\">sentiment_very_satisfied</mat-icon>\r\n                                </p>\r\n                                <p matLine class=\"text-muted\"><small>04 February, 2018 at 10:22</small></p>\r\n                                <p matLine class=\"text\">Nulla accumsan, lacus sed suscipit rutrum, turpis augue accumsan metus, in accumsan urna mi vehicula lorem. Pellentesque semper nibh vitae augue placerat finibus. Nulla sed porttitor nunc, quis tristique sem. Quisque in varius nisl. Integer turpis lorem, ultricies sed sem nec, commodo molestie arcu. Nulla finibus ex tortor, et suscipit magna semper consectetur. Cras sit amet metus dui. Maecenas eget dui at ex varius malesuada vel non felis.</p>\r\n                            </mat-list-item>\r\n                            <mat-list-item class=\"h-100 py-1\">\r\n                                <img matListAvatar [src]=\"'assets/images/avatars/avatar-3.png'\" alt=\"image\" class=\"review-author\">\r\n                                <p matLine fxLayoutAlign=\"start center\">\r\n                                    <span class=\"fw-500\">Andy Warhol</span> \r\n                                    <mat-icon class=\"text-muted px-1\" matTooltip=\"Neutral\" matTooltipPosition=\"after\">sentiment_neutral</mat-icon>\r\n                                </p>\r\n                                <p matLine class=\"text-muted\"><small>14 February, 2018 at 11:10</small></p>\r\n                                <p matLine class=\"text\">Pellentesque hendrerit vel turpis aliquam placerat. Suspendisse ullamcorper congue feugiat. Etiam gravida metus ac massa posuere venenatis. Pellentesque vehicula lobortis dolor, ac pretium dolor maximus quis. Fusce vitae iaculis mauris, quis posuere ex. Mauris vitae convallis nibh. Etiam eget enim at orci interdum maximus nec in ante.</p>\r\n                            </mat-list-item>\r\n                        </mat-list>\r\n                        \r\n                        <h3 class=\"mt-2\">LEAVE YOUR REVIEW</h3>\r\n                        <div class=\"divider\"></div>\r\n                        <p class=\"mt-2 text-muted\">Your email address will not be published. Required fields are marked *</p>\r\n                        <h3 fxLayoutAlign=\"start center\" class=\"mt-2\">\r\n                            <span>Your Rating:</span>\r\n                            <button mat-icon-button matTooltip=\"Very Dissatisfied\" matTooltipPosition=\"above\"><mat-icon class=\"mat-icon-lg\">sentiment_very_dissatisfied</mat-icon></button>\r\n                            <button mat-icon-button matTooltip=\"Dissatisfied\" matTooltipPosition=\"above\"><mat-icon class=\"mat-icon-lg\">sentiment_dissatisfied</mat-icon></button>\r\n                            <button mat-icon-button matTooltip=\"Neutral\" matTooltipPosition=\"above\"><mat-icon class=\"mat-icon-lg\">sentiment_neutral</mat-icon></button>\r\n                            <button mat-icon-button matTooltip=\"Satisfied\" matTooltipPosition=\"above\"><mat-icon class=\"mat-icon-lg\">sentiment_satisfied</mat-icon></button>\r\n                            <button mat-icon-button matTooltip=\"Very Satisfied\" matTooltipPosition=\"above\"><mat-icon class=\"mat-icon-lg\">sentiment_very_satisfied</mat-icon></button>\r\n                        </h3>\r\n\r\n                        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" fxLayout=\"row wrap\">\r\n                            <div fxFlex=\"100\" class=\"px-1 mt-1\">\r\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                    <mat-label>Your review</mat-label>\r\n                                    <textarea matInput placeholder=\"Your review\" formControlName=\"review\" required rows=\"5\"></textarea>\r\n                                    <mat-error *ngIf=\"form.controls.review.errors?.required\">Review is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1 mt-2\">\r\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                    <mat-label>Your name</mat-label>\r\n                                    <input matInput placeholder=\"Your name\" formControlName=\"name\" required>\r\n                                    <mat-error *ngIf=\"form.controls.name.errors?.required\">Name is required</mat-error>\r\n                                    <mat-error *ngIf=\"form.controls.name.hasError('minlength')\">Name isn't long enough, minimum of 4 characters</mat-error>\r\n                                </mat-form-field> \r\n                            </div>\r\n                            <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"px-1 mt-2\">\r\n                                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                                    <mat-label>Your email</mat-label>\r\n                                    <input matInput placeholder=\"Your email\" formControlName=\"email\" required>\r\n                                    <mat-error *ngIf=\"form.controls.email.errors?.required\">Email is required</mat-error>\r\n                                    <mat-error *ngIf=\"form.controls.email.hasError('invalidEmail')\">Invalid email address</mat-error>\r\n                                </mat-form-field> \r\n                            </div>\r\n                            <div fxFlex=\"100\" class=\"mt-2 text-center w-100\">\r\n                                <button mat-raised-button color=\"primary\" type=\"submit\">SUBMIT REVIEW</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                        \r\n                    </div>\r\n                </mat-tab> -->\r\n            </mat-tab-group>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-product-zoom',\r\n  templateUrl: './product-zoom.component.html',\r\n  styleUrls: ['./product-zoom.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ProductZoomComponent implements OnInit {\r\n  \r\n  @ViewChild('zoomImage', { static: true }) zoomImage;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ProductZoomComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public image:any) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  public close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  public count:number = 10;\r\n  public maxWidth:number = 60;\r\n  public zoomIn(){\r\n    if(this.count < 60){\r\n      this.maxWidth = this.maxWidth + this.count;\r\n      this.zoomImage.nativeElement.style.maxWidth = this.maxWidth + '%';      \r\n      this.count = this.count + 10;\r\n    }\r\n  }  \r\n \r\n  public zoomOut(){\r\n    if(this.count > 10){\r\n      this.count = this.count - 10;\r\n      this.maxWidth = this.maxWidth - this.count;\r\n      this.zoomImage.nativeElement.style.maxWidth = this.maxWidth + '%';      \r\n    }\r\n  }\r\n\r\n}","<div class=\"controls\">\r\n    <button mat-mini-fab color=\"primary\" class=\"zoom-in\" (click)=\"zoomIn()\"><mat-icon>zoom_in</mat-icon></button>\r\n    <button mat-mini-fab color=\"primary\" class=\"zoom-out\" (click)=\"zoomOut()\"><mat-icon>zoom_out</mat-icon></button>\r\n    <button mat-mini-fab color=\"warn\" class=\"close\" (click)=\"close()\"><mat-icon>close</mat-icon></button>\r\n</div>\r\n<div mat-dialog-content>\r\n    <div class=\"viewer\">\r\n        <img [src]=\"image\" #zoomImage>\r\n    </div>    \r\n</div>","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Product } from 'src/app/app.models';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DataService } from 'src/app/data.service';\r\nimport { globalData } from 'src/app/globalVar';\r\nimport { UserDialogComponent } from '../../users/user-dialog/user-dialog.component';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.scss']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  public products:any= [];\r\n  public viewCol: number = 25;\r\n  public page: any;\r\n  public count = 12;\r\n  url=globalData.apiUrl\r\n  viewGrid=true;\r\n  constructor(public appService:AppService, public dialog: MatDialog,private dataServe:DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(window.innerWidth < 1280){\r\n      this.viewCol = 33.3;\r\n    };\r\n    this.getAllProducts(); \r\n  }\r\n\r\n  // public getAllProducts(){\r\n  //   this.appService.getProducts(\"featured\").subscribe(data=>{\r\n  //     this.products = data; \r\n  //     //for show more product  \r\n  //     for (var index = 0; index < 3; index++) {\r\n  //       this.products = this.products.concat(this.products);        \r\n  //     }\r\n  //   });\r\n  \r\n  // }\r\n  public getAllProducts(){\r\n      this.dataServe.adminGetProductList(null).subscribe(data=>{\r\n        console.log(data)\r\n        this.products=data;\r\n        this.products=this.products.msg;\r\n      })\r\n  }\r\n\r\n  public onPageChanged(event){\r\n    this.page = event; \r\n    window.scrollTo(0,0); \r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void { \r\n    (window.innerWidth < 1280) ? this.viewCol = 33.3 : this.viewCol = 25;\r\n  }\r\n \r\n\r\n  public remove(product:any){  \r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: \"400px\",\r\n      data: {\r\n        title: \"Confirm Action\",\r\n        message: \"Are you sure you want delete this product?\"\r\n      }\r\n    }); \r\n    dialogRef.afterClosed().subscribe(dialogResult => { \r\n      if(dialogResult){\r\n        const index: number = this.products.indexOf(product);\r\n        if (index !== -1) {\r\n          this.products.splice(index, 1);  \r\n          this.dataServe.adminDelProduct(product.id,product.prod_name).subscribe(data=>{\r\n            console.log(data);\r\n            this.getAllProducts();\r\n          })\r\n        } \r\n      } \r\n    }); \r\n  }\r\n  public openUserDialog(user){\r\n    // let dialogRef = this.dialog.open(UserDialogComponent, {\r\n    //     data: user\r\n    // });\r\n\r\n    // dialogRef.afterClosed().subscribe(user => {\r\n    //     // if(user){\r\n    //     //     (user.id) ? this.updateUser(user) : this.addUser(user);\r\n    //     // }\r\n    // });\r\n}\r\n   changeView(view:any){\r\n        if(view=='grid')\r\n          this.viewGrid=true\r\n        else\r\n          this.viewGrid=false;\r\n   }\r\n}\r\n","<div style=\"float:right\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <mat-button-toggle-group #viewType=\"matButtonToggleGroup\" appearance=\"legacy\" value=\"grid\">\r\n        <mat-button-toggle (click)=\"changeView('grid')\" value=\"grid\">\r\n            <mat-icon>view_module</mat-icon>\r\n        </mat-button-toggle>\r\n        <mat-button-toggle (click)=\"changeView('list')\" value=\"list\">\r\n            <mat-icon>view_list</mat-icon>\r\n        </mat-button-toggle>\r\n    </mat-button-toggle-group>\r\n</div>\r\n\r\n<div *ngIf=\"viewGrid\" fxLayout=\"row wrap\">\r\n\r\n    <div *ngFor=\"let product of products | paginate: { itemsPerPage: count, currentPage: page }\" fxFlex=\"100\"\r\n        [fxFlex.gt-sm]=\"viewCol\" fxFlex.sm=\"50\" class=\"p-1\">\r\n        <mat-card class=\"product-item text-center\">\r\n            <mat-chip-list *ngIf=\"product.discount\">\r\n                <mat-chip color=\"warn\" selected=\"true\">{{product.discount}}% OFF</mat-chip>\r\n            </mat-chip-list>\r\n            <img *ngIf=\"product.img_path\" [src]=\"url+'/'+product.img_path\" alt=\"\">\r\n            <img *ngIf=\"!product.img_path\" src=\"/assets/images/products/headset/2-medium.png\" alt=\"\">\r\n            <!-- <h4 class=\"category text-muted\">{{ ( appService.Data.categories | filterById : product.categoryId )?.name }}</h4>                                                                      -->\r\n            <h4 class=\"category text-muted\">{{product.cat_name}}</h4>\r\n            <div class=\"title text-truncate\">\r\n                {{product.prod_name}}\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"prices\">\r\n                <div fxLayout=\"column\" fxLayoutAlign=\"center start\">\r\n                    <p class=\"old-price text-muted\"><span *ngIf=\"product.prod_sp!=product.offer_price\">&#8377;{{product.prod_sp | number :\r\n                            '1.2-2'}}</span></p>\r\n                    <p class=\"new-price\">&#8377;{{product.offer_price | number : '1.2-2'}}</p>\r\n                </div>\r\n                <!-- <app-rating [ratingsCount]=\"product.ratingsCount\" [ratingsValue]=\"product.ratingsValue\" [direction]=\"'column'\"></app-rating> -->\r\n            </div>\r\n            <div class=\"divider mt-2\"></div>\r\n            <div class=\"icons\">\r\n                <a [routerLink]=\"['/admin/products/add-product', product.id]\" mat-mini-fab color=\"primary\"\r\n                    matTooltip=\"Edit\">\r\n                    <mat-icon>edit</mat-icon>\r\n                </a>\r\n                <span class=\"px-1\"> <a [routerLink]=\"['/admin/products/product-detail', product.id]\" mat-mini-fab\r\n                        color=\"primary\" matTooltip=\"View\">\r\n                        <mat-icon>remove_red_eye</mat-icon>\r\n                    </a></span>\r\n                <button mat-mini-fab color=\"warn\" matTooltip=\"Remove\" (click)=\"remove(product)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                </button>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"!viewGrid\" fxLayout=\"row wrap\">\r\n  \r\n    <div *ngFor=\"let product of products | paginate: { itemsPerPage: 6, currentPage: page }\" fxFlex=\"100\" class=\"p-1\">\r\n        <mat-card class=\"p-0\">\r\n            <div class=\"bg-primary\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n                <h3 class=\"user-name pl-2\"> {{product.prod_name}}</h3>\r\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" #menuTrigger=\"matMenuTrigger\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n\r\n            </div>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\"  overlapTrigger=\"true\">\r\n                <span (mouseleave)=\"menuTrigger.closeMenu()\">\r\n                    <button mat-menu-item [routerLink]=\"['/admin/products/product-detail', product.id]\">\r\n                        <mat-icon>mode_edit</mat-icon>\r\n                        <span>Edit</span>\r\n                    </button>\r\n                   <button  mat-menu-item [routerLink]=\"['/admin/products/product-detail', product.id]\">\r\n                    <mat-icon>remove_red_eye</mat-icon>\r\n                    <span>View</span>\r\n                   </button>\r\n                    \r\n                    <button mat-menu-item (click)=\"remove(product)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>Delete</span>\r\n                    </button>\r\n                </span>\r\n            </mat-menu>\r\n            <div class=\"user-content\" fxLayout=\"row\" fxLayoutAlign=\"space-around center\">\r\n                <div fxFlex=\"20\" fxFlex.xs=\"30\" fxLayout=\"column\">\r\n                    <!-- <mat-chip-list *ngIf=\"product.discount\">\r\n                        <mat-chip color=\"warn\" selected=\"true\">{{product.discount}}% OFF</mat-chip>\r\n                    </mat-chip-list> -->\r\n                    <div class=\"user-img\">\r\n                        <img height=\"50\" width=\"50\" *ngIf=\"product.img_path\" [src]=\"url+'/'+product.img_path\">\r\n                        <img height=\"50\" width=\"50\" *ngIf=\"!product.img_path\" src=\"/assets/images/products/headset/2-medium.png\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n             <div fxFlex=\"80\" fxFlex.xs=\"70\" fxLayout=\"row\" fxLayout.xs=\"column\" class=\"user-details transition-2\" > \r\n                    <div fxFlex=\"30\" fxFlex.xs=\"100\" fxLayout=\"column\">\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"text-muted\">texture</mat-icon>\r\n                            <span>{{product.cat_name}}</span>\r\n                        </p>\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"text-muted\">filter_none</mat-icon>\r\n                            <span>{{product.sub_cat_name}}</span>\r\n                        </p>\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"text-muted\">art_track</mat-icon>\r\n                            <span>{{product.type_name}}</span>\r\n                        </p>                                               \r\n                    </div>\r\n                    <div fxFlex=\"30\" fxFlex.xs=\"100\" fxLayout=\"column\">\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"text-muted\">person</mat-icon>\r\n                            <span>{{product.prod_vendor}}</span>\r\n                        </p> \r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"text-muted\">attach_money</mat-icon>\r\n                            <span class=\"old-price text-muted\" *ngIf=\"product.prod_sp!=product.offer_price\">${{product.prod_sp | number : '1.2-2'}} </span>&nbsp;<span class=\"new-price\">{{product.discount}}% OFF </span> \r\n                        </p>\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                            <mat-icon class=\"text-muted\">attach_money</mat-icon>\r\n                            <span class=\"new-price\">${{product.offer_price | number : '1.2-2'}}</span>\r\n                        </p>                        \r\n                    </div>\r\n                    <!-- <div fxFlex=\"40\" fxFlex.xs=\"100\" fxLayout=\"column\">\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                           \r\n                            <span>Registration {{user.settings.registrationDate | date:\"dd MMMM, yyyy 'at' HH:mm\"}}</span>\r\n                        </p>\r\n                        <p fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n                           \r\n                            <span>Joined {{user.settings.joinedDate | date:\"dd MMMM, yyyy 'at' HH:mm\"}}</span>\r\n                        </p> \r\n                                         \r\n                    </div> -->\r\n                </div> \r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"products.length > 0\" fxLayout=\"row wrap\">\r\n    <div fxFlex=\"100\" class=\"p-1\">\r\n        <mat-card class=\"p-0 text-center\">\r\n            <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\"\r\n                (pageChange)=\"onPageChanged($event)\"></pagination-controls>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProducttypedialogComponent } from './producttypedialog/producttypedialog.component'\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\n// import { ProducttypedialogComponent } from './producttypedialog/producttypedialog.component'\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-product-type',\n  templateUrl: './product-type.component.html',\n  styleUrls: ['./product-type.component.scss']\n})\nexport class ProductTypeComponent implements OnInit {\n  // public categories:Category[] = []; \n  public adminTypes:any=[];\n  public page: any;\n  public count = 6;\n  public settings:Settings;\n  constructor(public dialog: MatDialog, public appSettings:AppSettings,private dataServe:DataService) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit(): void {\n    this.getTypes();\n  }\n\n  public getTypes(){   \n    //template\n    // this.appService.getCategories().subscribe(data => {\n    //   this.categories = data; \n    //   this.categories.shift();\n    // }); \n\n    //for fetching admin categories\n    this.dataServe.adminGetProducts().subscribe(data=>{\n      this.adminTypes=data\n      this.adminTypes=this.adminTypes.msg\n      console.log(this.adminTypes)\n    })\n  }\n\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public openTypeDialog(dt:any){\n    console.log(dt);\n    \n    // console.log(this.adminTypes)\n    const dialogRef = this.dialog.open(ProducttypedialogComponent, {\n      data: {\n        type: dt,\n        types: this.adminTypes\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: true,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr'\n    });\n    // console.log(dialogRef);\n    \n    dialogRef.afterClosed().subscribe(type => {       \n      if(type){   \n        \n        const index: number = this.adminTypes.findIndex(x => x.id == type.id);\n        if(index !== -1){\n          this.adminTypes[index] = type;\n        } \n        else{ \n          \n          let last_type = this.adminTypes[this.adminTypes.length - 1]; \n          type.id = last_type.id + 1;\n          this.adminTypes.push(type);  \n        }          \n      }\n    });\n  }\n\n  public remove(type:any){  \n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this type?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.adminTypes.indexOf(type);\n        if (index !== -1) {\n          this.dataServe.adminDeleteProducts(type).subscribe(data=>{\n            console.log(data)\n          })\n          this.adminTypes.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\"> \n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\n            <h2>Product Type List</h2> \n            <button mat-raised-button color=\"primary\" (click)=\"openTypeDialog(null)\">Add Product Type</button>\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"mat-table admin-table\">\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">ID</div>\n\n                <div class=\"mat-header-cell\">Name</div>\n                <!-- <div class=\"mat-header-cell\">Has SubCategory</div> \n                <div class=\"mat-header-cell\">Parent Category</div>  -->\n                <div class=\"mat-header-cell\"></div>\n            </div>\n            <!-- <div *ngFor=\"let cat of categories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\"> -->\n                <div *ngFor=\"let p_type of adminTypes | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\">\n                <div class=\"mat-cell\">{{i+1}}</div>\n                <div class=\"mat-cell\">{{p_type.type_name}}</div>\n                <!-- <div class=\"mat-cell\">\n                    <mat-icon class=\"text-muted\">{{ (cat.hasSubCategory) ? 'check_box' : 'check_box_outline_blank'}}</mat-icon> \n                </div>  \n                <div class=\"mat-cell\">\n                    {{ ( categories | filterById : cat.parentId )?.name }}\n                </div>    -->\n                <div class=\"mat-cell\">\n                    <div class=\"p-1 actions\">          \n                        <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"openTypeDialog(p_type)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(p_type)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </div>\n                </div>      \n            </div>\n        </div>\n    </mat-card>\n\n    <div *ngIf=\"adminTypes.length > 0\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100\"> \n            <mat-card class=\"p-0 text-center\">           \n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-producttypedialog',\n  templateUrl: './producttypedialog.component.html',\n  styleUrls: ['./producttypedialog.component.scss']\n})\nexport class ProducttypedialogComponent implements OnInit {\n\n  public form: FormGroup;\n  user=\"admin@gmail.com\"\n  constructor(public dialogRef: MatDialogRef<ProducttypedialogComponent>, \n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public fb: FormBuilder,\n              public dataServe:DataService\n              ) { }\n\n  ngOnInit(): void { \n    this.form = this.fb.group({\n      id: 0,\n      type_name: [null, Validators.required],\n      user: this.user\n    }); \n    // console.log(this.data);\n    \n    if(this.data.type){\n      // console.log('IF here');\n      \n      this.form.patchValue(this.data.type); \n    };\n  }\n\n  public onSubmit(){\n    console.log(this.form.value);\n    if(this.form.valid){\n      this.dialogRef.close(this.form.value);\n      this.dataServe.adminPostProducts(this.form.value).subscribe(data=>{\n        console.log(data)\n      })\n    }\n  }\n\n}\n","<h1 mat-dialog-title>Product Type</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <div mat-dialog-content>\n        <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"type_name\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.type_name.errors?.required\">Name is required</mat-error> \n                </mat-form-field>\n            </div> \n            <!-- <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Parent category</mat-label>\n                    <mat-select formControlName=\"parentId\">\n                        <mat-option *ngFor=\"let cat of data.categories\" [value]=\"cat.id\">\n                            <span>{{cat.name}}</span>\n                        </mat-option>\n                    </mat-select> \n                </mat-form-field>\n            </div>  -->\n            <!-- <div fxFlex=\"100\" class=\"py-1\">    \n                <mat-checkbox formControlName=\"hasSubCategory\" color=\"primary\">Has SubCategory</mat-checkbox>\n            </div>  -->\n        </div>\n    </div>\n    <div mat-dialog-actions>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n        </div> \n    </div>\n</form>\n\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { SwiperModule } from 'ngx-swiper-wrapper';\r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductDetailComponent } from './product-detail/product-detail.component';\r\nimport { ProductZoomComponent } from './product-detail/product-zoom/product-zoom.component';\r\nimport { AddProductComponent } from './add-product/add-product.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { CategoryDialogComponent } from './categories/category-dialog/category-dialog.component';\r\nimport { SubcategoriesComponent } from './subcategories/subcategories.component';\r\nimport { MaterialComponent } from './material/material.component';\r\nimport { ProductTypeComponent } from './product-type/product-type.component';\r\nimport { MaterialDialogComponent } from './material/material-dialog/material-dialog.component';\r\nimport { ProducttypedialogComponent } from './product-type/producttypedialog/producttypedialog.component';\r\nimport { ProductColorComponent } from './product-color/product-color.component';\r\nimport { ColorDialogComponent } from './product-color/color-dialog/color-dialog.component';\r\nimport { SubcatDialogComponent } from './subcategories/subcat-dialog/subcat-dialog.component';\r\nimport { NgxImageZoomModule } from 'ngx-image-zoom';\r\n\r\nexport const routes = [ \r\n  { path: '', redirectTo: 'product-list', pathMatch: 'full'},\r\n  { path: 'categories', component: CategoriesComponent, data: { breadcrumb: 'Categories' } },\r\n  { path: 'subcategories', component: SubcategoriesComponent, data: { breadcrumb: 'SubCategories' } },\r\n  { path: 'producttype', component: ProductTypeComponent, data: { breadcrumb: 'Product Type' } },\r\n  { path: 'material', component: MaterialComponent, data: { breadcrumb: 'Material' } },\r\n  { path: 'color', component: ProductColorComponent, data: { breadcrumb: 'Color' } },\r\n  { path: 'product-list', component: ProductListComponent, data: { breadcrumb: 'Product List' } },\r\n  { path: 'product-detail', component: ProductDetailComponent, data: { breadcrumb: 'Product Detail' } },\r\n  { path: 'product-detail/:id', component: ProductDetailComponent, data: { breadcrumb: 'Product Detail' } }, \r\n  { path: 'add-product', component: AddProductComponent, data: { breadcrumb: 'Add Product' } },\r\n  { path: 'add-product/:id', component: AddProductComponent, data: { breadcrumb: 'Edit Product' } }, \r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    ProductZoomComponent,\r\n    AddProductComponent,\r\n    CategoriesComponent,\r\n    CategoryDialogComponent,\r\n    SubcategoriesComponent,\r\n    MaterialComponent,\r\n    ProductTypeComponent,\r\n    MaterialDialogComponent,\r\n    ProducttypedialogComponent,\r\n    ProductColorComponent,\r\n    ColorDialogComponent,\r\n    SubcatDialogComponent\r\n  ],\r\n  imports: [\r\n    NgxImageZoomModule,\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxPaginationModule,\r\n    SwiperModule,\r\n    InputFileModule\r\n  ]\r\n})\r\nexport class ProductsModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService } from 'src/app/data.service';\nimport { Category } from 'src/app/app.models';\n@Component({\n  selector: 'app-subcat-dialog',\n  templateUrl: './subcat-dialog.component.html',\n  styleUrls: ['./subcat-dialog.component.scss']\n})\nexport class SubcatDialogComponent implements OnInit {\n  public selectedCatId:any;\n  public form: FormGroup;\n  user=\"admin@gmail.com\"\n  constructor(public dialogRef: MatDialogRef<SubcatDialogComponent>, \n              @Inject(MAT_DIALOG_DATA) public data: any,\n              public fb: FormBuilder,\n              public dataServe:DataService\n              ) { this.selectedCatId=this.data.catId;\n                console.log(this.selectedCatId)\n                console.log(this.data)\n              }\n  public categories:Category[] = []; \n  public adminCategories:any=[];\n  ngOnInit(): void { \n    this.getCategories();\n    this.form = this.fb.group({\n      id: 0,\n      cat_id: [this.selectedCatId, Validators.required],\n      name: [null, Validators.required],\n      user: this.user\n    }); \nconsole.log(this.form);\n\n    if(this.data.subcat){\n      this.form.patchValue(this.data.subcat); \n    };\n  }\n  public getCategories(){   \n      //for fetching admin categories\n    this.dataServe.adminGetCategories().subscribe(data=>{\n      this.adminCategories=data\n      this.adminCategories=this.adminCategories.msg\n      console.log(this.adminCategories)\n    })\n  }\n  public onSubmit(){\n    console.log(this.form.value);\n    if(this.form.valid){\n      this.dialogRef.close(this.form.value);\n      this.dataServe.adminPostSubcategories(this.form.value).subscribe(data=>{\n        console.log(data)\n      })\n    }\n  }\n  disp(v:any){\n    // console.log(v)\n    this.selectedCatId=v;\n  }\n\n}\n","<h1 mat-dialog-title>Sub-category</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n    <div mat-dialog-content>\n        <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Category</mat-label>\n                    <mat-select formControlName=\"cat_id\" [(value)]=\"selectedCatId\" #s_cat (selectionChange)=\"disp(s_cat.value)\">\n                               \n                      <mat-option *ngFor=\"let cat of adminCategories\" [value]=\"cat.id\">{{cat.name}}</mat-option>\n                     \n                    </mat-select>\n                    <mat-error *ngIf=\"!selectedCatId\">Category is required</mat-error> \n                  </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Name</mat-label>\n                    <input matInput formControlName=\"name\" autofocus required>\n                    <mat-error *ngIf=\"form.controls.name.errors?.required\">Name is required</mat-error> \n                </mat-form-field>\n            </div> \n           \n            <!-- <div fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\n                    <mat-label>Parent category</mat-label>\n                    <mat-select formControlName=\"parentId\">\n                        <mat-option *ngFor=\"let cat of data.categories\" [value]=\"cat.id\">\n                            <span>{{cat.name}}</span>\n                        </mat-option>\n                    </mat-select> \n                </mat-form-field>\n            </div>  -->\n            <!-- <div fxFlex=\"100\" class=\"py-1\">    \n                <mat-checkbox formControlName=\"hasSubCategory\" color=\"primary\">Has SubCategory</mat-checkbox>\n            </div>  -->\n        </div>\n    </div>\n    <div mat-dialog-actions>\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\"> \n            <button mat-raised-button color=\"warn\" type=\"button\" mat-dialog-close>Close</button>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Save</button>\n        </div> \n    </div>\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { adminCategory, Category } from 'src/app/app.models';\nimport { AppService } from 'src/app/app.service';\n// import { CategoryDialogComponent } from './category-dialog/category-dialog.component';\nimport { SubcatDialogComponent } from './subcat-dialog/subcat-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { DataService } from 'src/app/data.service';\n@Component({\n  selector: 'app-subcategories',\n  templateUrl: './subcategories.component.html',\n  styleUrls: ['./subcategories.component.scss']\n})\nexport class SubcategoriesComponent implements OnInit {\n\n  public categories:Category[] = []; \n  public adminSubs:any=[];\n  public page: any;\n  public count = 6;\n  public settings:Settings;\n  constructor(public appService: AppService, public dialog: MatDialog, public appSettings:AppSettings,private dataServe:DataService) {\n    this.settings = this.appSettings.settings;\n  }\n\n  ngOnInit(): void {\n    this.getSubcat();\n  }\n\n  public getSubcat(){   \n    //template\n    // this.appService.getCategories().subscribe(data => {\n    //   this.categories = data; \n    //   this.categories.shift();\n    // }); \n\n    //for fetching admin categories\n    this.dataServe.adminGetSubcategories().subscribe(data=>{\n      this.adminSubs=data\n      this.adminSubs=this.adminSubs.msg\n      console.log(this.adminSubs)\n    })\n  }\n\n\n  public onPageChanged(event){\n    this.page = event; \n    window.scrollTo(0,0); \n  }\n\n  public openSubDialog(data:any,cat_id:any){\n    console.log(data);\n    console.log(cat_id);\n    \n    \n    const dialogRef = this.dialog.open(SubcatDialogComponent, {\n      data: {\n        subcat: data,\n        catId:cat_id,\n        subcats: this.adminSubs\n      },\n      panelClass: ['theme-dialog'],\n      autoFocus: true,\n      direction: (this.settings.rtl) ? 'rtl' : 'ltr'\n    });\n    dialogRef.afterClosed().subscribe(sub => { \n      if(sub){    \n       \n        console.log(sub)\n        const index: number = this.adminSubs.findIndex(x => x.id == sub.id);\n        if(index !== -1){\n          console.log(sub)\n          this.adminSubs[index] = sub;\n         this.getSubcat();\n        } \n        else{ \n          console.log(sub)\n          let last_sub = this.adminSubs[this.adminSubs.length - 1]; \n          sub.id = last_sub.id + 1;\n          this.adminSubs.push(sub);  \n          this.getSubcat();\n        }          \n      }\n    });\n  }\n\n  public remove(sub:any){  \n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want remove this sub-category?\"\n      }\n    }); \n    dialogRef.afterClosed().subscribe(dialogResult => { \n      if(dialogResult){\n        const index: number = this.adminSubs.indexOf(sub);\n        if (index !== -1) {\n          this.dataServe.adminDeleteSubcategories(sub).subscribe(data=>{\n            console.log(data)\n          })\n          this.adminSubs.splice(index, 1);  \n        } \n      } \n    }); \n  }\n\n\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2\">\n            <h2>Sub-category List</h2>\n            <button mat-raised-button color=\"primary\" (click)=\"openSubDialog(null,null)\">Add Sub-category</button>\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"mat-table admin-table\">\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">ID</div>\n\n                <div class=\"mat-header-cell\">Category</div>\n                <div class=\"mat-header-cell\">Subcategory</div>\n                <!-- <div class=\"mat-header-cell\"></div> -->\n                <div class=\"mat-header-cell\"></div>\n            </div>\n            <!-- <div *ngFor=\"let cat of categories | paginate: { itemsPerPage: count, currentPage: page }; let i=index\" class=\"mat-row\"> -->\n            <div *ngFor=\"let cat of adminSubs | paginate: { itemsPerPage: count, currentPage: page }; let i=index\"\n                class=\"mat-row\">\n                <div class=\"mat-cell\">{{i+1}}</div>\n                <div class=\"mat-cell\">{{cat.cat_name}}</div>\n                <div class=\"mat-cell\"> {{cat.name}} </div>\n        \n                <div class=\"mat-cell\">\n                    <div class=\"p-1 actions\">\n                        <button mat-mini-fab color=\"primary\" matTooltip=\"Edit\" (click)=\"openSubDialog(cat,cat.cat_id)\">\n                            <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\" (click)=\"remove(cat)\">\n                            <mat-icon>delete</mat-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-card>\n\n    <div *ngIf=\"adminSubs.length > 0\" fxLayout=\"row wrap\">\n        <div fxFlex=\"100\">\n            <mat-card class=\"p-0 text-center\">\n                <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\"\n                    (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n            </mat-card>\n        </div>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}